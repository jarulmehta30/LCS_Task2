1.0,2,year.
1.0,2,alphabet.
1.0,2,palindrome.
1.0,2,number.
1.0,2,java.
1.0,2,util.
4.247927513443585,19,out.
1.584962500721156,3,sc.
1.0,2,a.
1.584962500721156,3,c.
4.321928094887363,20,System.
2.0,4,10;
2.807354922057604,7,0;
2.3219280948873626,5,1;
2.3219280948873626,5,2;
1.0,2,t2;
1.0,2,sum;
2.3219280948873626,5,i;
1.584962500721156,3,num;
1.584962500721156,3,true;
2.0,4,false;
3.321928094887362,10,in(
1.584962500721156,3,d(
4.700439718141092,26,n(
1.584962500721156,3,myMethod(
3.321928094887362,10,main(
4.0,16,println(
1.0,2,nextInt(
1.0,2,int(
1.0,2,print(
4.0,16,")
1.0,2,')
2.0,4,0)
1.0,2,sum)
2.0,4,i)
3.321928094887362,10,args)
3.0,8,year 
2.807354922057604,7,else 
3.169925001442312,9,if 
1.584962500721156,3,prime 
3.700439718141092,13," 
1.0,2,method 
1.0,2,in 
1.0,2,' 
3.4594316186372978,11,is 
2.0,4,an 
2.0,4,0 
2.807354922057604,7,1 
2.0,4,2 
2.0,4,t1 
1.0,2,t2 
1.0,2,flag 
2.0,4,factorial 
2.584962500721156,6,sum 
1.0,2,num1 
3.0,8,leap 
3.0,8,a 
5.247927513443585,38,c 
4.321928094887363,20,d 
3.5849625007211565,12,i 
3.169925001442312,9,n 
2.0,4,reversedInteger 
2.0,4,originalInteger 
3.4594316186372978,11,num 
3.321928094887362,10,String[] 
3.4594316186372978,11,static 
3.4594316186372978,11,void 
1.0,2,import 
2.584962500721156,6,for 
1.0,2,Factorial 
2.0,4,not 
4.247927513443585,19,public 
3.321928094887362,10,class 
3.700439718141092,13,int 
1.0,2,boolean 
1.584962500721156,2,java.util
1.584962500721156,2,a.util
1.584962500721156,2,d in
6.732805814589748,19,System.out
6.339850002884624,16,out.println
1.584962500721156,2,c.nextInt
1.584962500721156,2,sc.nextInt
1.584962500721156,2,alphabet."
1.584962500721156,2,number."
1.584962500721156,2,year."
4.754887502163468,8,println("
4.754887502163468,8,n("
1.584962500721156,2,palindrome."
3.680168959767384,5,int i
1.584962500721156,2,d i
4.754887502163468,8," i
1.584962500721156,2,year i
6.732805814589748,19,out.print
2.5121061286922606,3,a leap
1.584962500721156,2,println("Sum 
1.584962500721156,2,n("Sum 
1.584962500721156,2,import java
5.024212257384521,9,c class
5.024212257384521,9,public class
5.265131460488539,10,c static
5.265131460488539,10,public static
5.483069389349208,11,static void
5.483069389349208,11,c void
5.265131460488539,10,d main
5.265131460488539,10,void main
5.265131460488539,10,in(String[]
5.265131460488539,10,main(String[]
5.265131460488539,10,n(String[]
5.265131460488539,10,String[] args
5.024212257384521,9,c c
5.024212257384521,9,public c
1.584962500721156,2,println(c
1.584962500721156,2,n(c
1.584962500721156,2,c >
1.584962500721156,2,c <
3.680168959767384,5,i <
4.754887502163468,8," is
1.584962500721156,2,year is
1.584962500721156,2,an alphabet
1.584962500721156,2,n alphabet
3.169925001442312,4,is not
2.5121061286922606,3,prime num
3.680168959767384,5,int num
1.584962500721156,2,println(num
1.584962500721156,2,n(num
2.5121061286922606,3,prime n
4.097068629413417,6,int n
1.584962500721156,2,c.n
3.169925001442312,4,is n
1.584962500721156,2,sc.n
1.584962500721156,2,println(n
1.584962500721156,2,n(n
2.5121061286922606,3,leap year
1.584962500721156,2,println(year
1.584962500721156,2,n(year
5.265131460488539,10,String[] a
1.584962500721156,2,an a
3.169925001442312,4,not a
3.680168959767384,5,is a
1.584962500721156,2,n a
1.584962500721156,2,println(originalInteger
1.584962500721156,2,n(originalInteger
1.584962500721156,2,a palindrome
2.5121061286922606,3,prime number
1.584962500721156,2,a prime
1.584962500721156,2,sum);
6.339850002884624,16,");
4.754887502163468,8,if (
3.680168959767384,5,for (
2.5121061286922606,3,myMethod()
2.5121061286922606,3,d()
1.584962500721156,2,nextInt()
4.449552277676267,7,else {
1.584962500721156,2,t1 +
1.584962500721156,2,sum +
2.5121061286922606,3,1 +
1.584962500721156,2,c +
3.169925001442312,4," +
1.584962500721156,2,year +
1.584962500721156,2,originalInteger +
1.584962500721156,2,num +
2.5121061286922606,3,year %
1.584962500721156,2,num %
1.584962500721156,2,factorial *
1.584962500721156,2,0 ==
1.584962500721156,2,' &&
1.584962500721156,2,' &
1.584962500721156,2,0; 
2.5121061286922606,3,1; 
1.584962500721156,2,num; 
1.584962500721156,2,2; 
3.169925001442312,4,i) 
3.169925001442312,4,0) 
1.584962500721156,2,c <=
3.169925001442312,4,i <=
1.584962500721156,2,c >=
4.0,4,for (in
3.169925001442312,3,1; i
4.643856189774725,5,for (i
2.0,2,0; i
4.0,4,for (int
2.0,2,d in
2.0,2,a.util.
2.0,2,an alphabet.
8.49585502688717,19,System.out.
2.0,2,java.util.
2.0,2,n alphabet.
2.0,2,import java.
2.0,2,prime number.
2.0,2,a palindrome.
2.0,2,leap year.
2.0,2,nextInt();
8.0,16,out.println(
2.0,2,sc.nextInt(
6.643856189774724,10,d main(
2.0,2,c.nextInt(
2.0,2,out.print(
6.643856189774724,10,void main(
2.0,2,number.")
2.0,2,year.")
2.0,2,palindrome.")
2.0,2,alphabet.")
6.643856189774724,10,String[] args)
4.0,4,i) {
4.0,4,0) {
2.0,2,num; +
2.0,2,num; ++
2.0,2,' &&
6.643856189774724,10,in(String[] 
3.169925001442312,3,not a 
6.643856189774724,10,main(String[] 
2.0,2,n(c 
6.339850002884624,9,c class 
3.169925001442312,3,year % 
2.0,2,a prime 
2.0,2,t1 + 
2.0,2,year + 
4.0,4,int num 
2.0,2,' && 
4.0,4,is not 
2.0,2,num % 
6.9188632372745955,11,static void 
2.0,2,num + 
2.0,2,year is 
6.643856189774724,10,c static 
2.0,2,n(originalInteger 
2.0,2,c <= 
4.0,4,int i 
2.0,2,println(c 
2.0,2,0 == 
2.0,2,n(year 
2.0,2,println(originalInteger 
2.0,2,println(num 
2.0,2,originalInteger + 
4.0,4,i <= 
4.0,4," + 
2.0,2,c + 
2.0,2,c >= 
2.0,2,println(year 
3.169925001442312,3,a leap 
6.643856189774724,10,public static 
3.169925001442312,3,if ( 
6.643856189774724,10,n(String[] 
4.0,4,is a 
6.9188632372745955,11,c void 
6.339850002884624,9,public class 
6.0,8," is 
2.0,2,n(num 
3.169925001442312,3,1 + 
2.3219280948873626,2,import java.util
9.28771237954945,16,System.out.println
2.3219280948873626,2,c <= '
2.3219280948873626,2,c >= '
2.3219280948873626,2,prime number."
2.3219280948873626,2,an alphabet."
2.3219280948873626,2,a palindrome."
2.3219280948873626,2,c + "
2.3219280948873626,2,leap year."
6.965784284662088,8,out.println("
2.3219280948873626,2,year + "
2.3219280948873626,2,originalInteger + "
2.3219280948873626,2,num + "
2.3219280948873626,2,n alphabet."
2.3219280948873626,2,num; ++i
9.863382238509676,19,System.out.print
2.3219280948873626,2,is a leap
2.3219280948873626,2,out.println("Sum 
7.7132781727146185,10,public static void
7.7132781727146185,10,c static void
7.7132781727146185,10,static void main
7.7132781727146185,10,c void main
7.7132781727146185,10,void main(String[]
7.7132781727146185,10,d main(String[]
7.7132781727146185,10,n(String[] args
7.7132781727146185,10,main(String[] args
7.7132781727146185,10,in(String[] args
2.3219280948873626,2," + sum
2.3219280948873626,2,out.println(c
2.3219280948873626,2,' && c
4.643856189774725,4," is not
2.3219280948873626,2,a prime num
2.3219280948873626,2,out.println(num
3.680168959767384,3,i <= num
2.3219280948873626,2,a prime n
2.3219280948873626,2,out.println(n
4.643856189774725,4,for (in
4.643856189774725,4," is n
4.643856189774725,4,i <= n
2.3219280948873626,2,0 == 0
2.3219280948873626,2,out.println(year
2.3219280948873626,2,if ( year
3.680168959767384,3,a leap year
2.3219280948873626,2,year % 4
7.7132781727146185,10,n(String[] a
7.7132781727146185,10,main(String[] a
7.7132781727146185,10,in(String[] a
4.643856189774725,4,is not a
4.643856189774725,4," is a
2.3219280948873626,2,out.println(originalInteger
2.3219280948873626,2,a prime number
2.3219280948873626,2,year.");
2.3219280948873626,2,number.");
2.3219280948873626,2,palindrome.");
2.3219280948873626,2,alphabet.");
2.3219280948873626,2,c.nextInt()
2.3219280948873626,2,sc.nextInt()
2.3219280948873626,2,n(originalInteger +
2.3219280948873626,2,println(c +
2.3219280948873626,2,num; ++
2.3219280948873626,2,n(c +
2.3219280948873626,2,println(num +
2.3219280948873626,2,println(originalInteger +
2.3219280948873626,2,n(num +
2.3219280948873626,2,n(year +
2.3219280948873626,2,println(year +
2.3219280948873626,2,' && 
4.643856189774725,4,for (int 
3.680168959767384,3,1; i 
2.584962500721156,2,num; ++i
5.169925001442312,4,for (int i
2.584962500721156,2,' && c
4.097068629413417,3,1; i <
2.584962500721156,2,a leap year.
2.584962500721156,2,import java.util.
2.584962500721156,2,a prime number.
2.584962500721156,2,i <= num;
2.584962500721156,2,sc.nextInt();
2.584962500721156,2,c.nextInt();
8.587059555375902,10,c void main(
8.587059555375902,10,static void main(
10.339850002884624,16,System.out.println(
2.584962500721156,2,System.out.print(
2.584962500721156,2,prime number.")
8.587059555375902,10,n(String[] args)
2.584962500721156,2,leap year.")
2.584962500721156,2,a palindrome.")
2.584962500721156,2,num; ++i)
2.584962500721156,2,n alphabet.")
2.584962500721156,2," + sum)
2.584962500721156,2,an alphabet.")
8.587059555375902,10,in(String[] args)
2.584962500721156,2,0 == 0)
8.587059555375902,10,main(String[] args)
2.584962500721156,2,out.println(year 
2.584962500721156,2,is a leap 
2.584962500721156,2,out.println(c 
2.584962500721156,2,out.println(num 
2.584962500721156,2,year + " 
2.584962500721156,2,println(c + 
2.584962500721156,2,n(num + 
2.584962500721156,2,println(num + 
2.584962500721156,2,c + " 
2.584962500721156,2,' && c 
8.587059555375902,10,public static void 
8.587059555375902,10,d main(String[] 
4.097068629413417,3," is a 
2.584962500721156,2,out.println(originalInteger 
2.584962500721156,2,n(c + 
2.584962500721156,2,if ( year 
5.169925001442312,4," is not 
2.584962500721156,2,n(originalInteger + 
2.584962500721156,2,println(originalInteger + 
2.584962500721156,2,num + " 
8.587059555375902,10,void main(String[] 
2.584962500721156,2,n(year + 
8.587059555375902,10,c static void 
4.097068629413417,3,is not a 
2.584962500721156,2,println(year + 
2.584962500721156,2,originalInteger + " 
4.097068629413417,3,1; i <=
2.807354922057604,2,n(year + "
2.807354922057604,2,a leap year."
2.807354922057604,2,println(c + "
2.807354922057604,2,a prime number."
2.807354922057604,2,println(originalInteger + "
2.807354922057604,2,println(num + "
2.807354922057604,2,n(c + "
2.807354922057604,2,n(num + "
8.422064766172813,8,System.out.println("
2.807354922057604,2,n(originalInteger + "
2.807354922057604,2,println(year + "
2.807354922057604,2,year + " i
2.807354922057604,2,c + " i
2.807354922057604,2,originalInteger + " i
2.807354922057604,2,num + " i
2.807354922057604,2,System.out.println("Sum 
9.325831187903477,10,public static void main
9.325831187903477,10,c static void main
9.325831187903477,10,c void main(String[]
9.325831187903477,10,static void main(String[]
9.325831187903477,10,void main(String[] args
9.325831187903477,10,d main(String[] args
2.807354922057604,2,System.out.println(c
2.807354922057604,2,' && c <
2.807354922057604,2,year + " is
2.807354922057604,2,c + " is
2.807354922057604,2,originalInteger + " is
2.807354922057604,2,num + " is
2.807354922057604,2,System.out.println(num
2.807354922057604,2,System.out.println(n
2.807354922057604,2,is a leap year
2.807354922057604,2,System.out.println(year
5.614709844115208,4," is not a
9.325831187903477,10,void main(String[] a
9.325831187903477,10,d main(String[] a
2.807354922057604,2,System.out.println(originalInteger
2.807354922057604,2,leap year.");
2.807354922057604,2,n alphabet.");
2.807354922057604,2,prime number.");
2.807354922057604,2,a palindrome.");
2.807354922057604,2," + sum);
2.807354922057604,2,an alphabet.");
2.807354922057604,2,num; ++i)
2.807354922057604,2,out.println(year +
2.807354922057604,2,out.println(c +
2.807354922057604,2,out.println(originalInteger +
2.807354922057604,2,out.println(num +
2.807354922057604,2,if ( year %
2.807354922057604,2,0 == 0) 
2.807354922057604,2,' && c 
5.614709844115208,4,for (int i 
2.807354922057604,2,i <= num; 
2.807354922057604,2,num; ++i) 
4.449552277676267,3,1; i <= 
2.807354922057604,2,' && c <=
3.0,2,' && c <
3.0,2,1; i <= num
4.754887502163468,3,1; i <= n
9.965784284662087,10,c static void main(
9.965784284662087,10,public static void main(
3.0,2,a leap year.")
9.965784284662087,10,void main(String[] args)
3.0,2,a prime number.")
9.965784284662087,10,d main(String[] args)
3.0,2,num; ++i) {
3.0,2,0 == 0) {
3.0,2,i <= num; +
3.0,2,i <= num; ++
3.0,2,out.println(year + 
3.0,2,println(year + " 
3.0,2,System.out.println(year 
3.0,2,System.out.println(originalInteger 
3.0,2,c + " is 
3.0,2,n(num + " 
3.0,2,num + " is 
3.0,2,out.println(num + 
3.0,2,println(num + " 
9.965784284662087,10,c void main(String[] 
3.0,2,year + " is 
3.0,2,' && c <= 
3.0,2,n(c + " 
3.0,2,n(originalInteger + " 
3.0,2,System.out.println(num 
3.0,2,println(c + " 
3.0,2,if ( year % 
3.0,2,originalInteger + " is 
3.0,2,num; ++i) 
9.965784284662087,10,static void main(String[] 
3.0,2,out.println(originalInteger + 
3.0,2,n(year + " 
3.0,2,println(originalInteger + " 
4.754887502163468,3," is not a 
3.0,2,out.println(c + 
3.0,2,System.out.println(c 
3.0,2,' && c <=
3.169925001442312,2,' && c <= '
3.169925001442312,2,out.println(year + "
3.169925001442312,2,out.println(num + "
3.169925001442312,2,out.println(c + "
3.169925001442312,2,out.println(originalInteger + "
3.169925001442312,2,println(num + " i
3.169925001442312,2,n(year + " i
3.169925001442312,2,n(originalInteger + " i
3.169925001442312,2,println(c + " i
3.169925001442312,2,println(originalInteger + " i
3.169925001442312,2,n(c + " i
3.169925001442312,2,i <= num; ++i
3.169925001442312,2,println(year + " i
3.169925001442312,2,n(num + " i
10.530262920977078,10,public static void main(String[]
10.530262920977078,10,c static void main(String[]
10.530262920977078,10,c void main(String[] args
10.530262920977078,10,static void main(String[] args
3.169925001442312,2,println(num + " is
3.169925001442312,2,n(year + " is
3.169925001442312,2,n(originalInteger + " is
3.169925001442312,2,println(c + " is
3.169925001442312,2,println(originalInteger + " is
3.169925001442312,2,n(c + " is
3.169925001442312,2,println(year + " is
3.169925001442312,2,n(num + " is
10.530262920977078,10,c void main(String[] a
10.530262920977078,10,static void main(String[] a
3.169925001442312,2,1; i <= num;
3.169925001442312,2,a leap year.");
3.169925001442312,2,a prime number.");
3.169925001442312,2,num; ++i) {
3.169925001442312,2,i <= num; ++
3.169925001442312,2,System.out.println(num +
3.169925001442312,2,System.out.println(year +
3.169925001442312,2,System.out.println(c +
3.169925001442312,2,System.out.println(originalInteger +
3.169925001442312,2,' && c <= 
3.321928094887362,2,' && c <= '
3.321928094887362,2,i <= num; ++i
3.321928094887362,2,i <= num; ++i)
11.03520626760198,10,c void main(String[] args)
11.03520626760198,10,static void main(String[] args)
3.321928094887362,2,out.println(c + " 
3.321928094887362,2,n(year + " is 
3.321928094887362,2,out.println(year + " 
11.03520626760198,10,public static void main(String[] 
3.321928094887362,2,n(num + " is 
3.321928094887362,2,System.out.println(num + 
3.321928094887362,2,1; i <= num; 
3.321928094887362,2,n(c + " is 
3.321928094887362,2,out.println(num + " 
3.321928094887362,2,println(originalInteger + " is 
11.03520626760198,10,c static void main(String[] 
3.321928094887362,2,println(year + " is 
3.321928094887362,2,out.println(originalInteger + " 
3.321928094887362,2,n(originalInteger + " is 
3.321928094887362,2,println(c + " is 
3.321928094887362,2,System.out.println(year + 
3.321928094887362,2,println(num + " is 
3.321928094887362,2,System.out.println(originalInteger + 
3.321928094887362,2,System.out.println(c + 
3.4594316186372978,2,System.out.println(year + "
3.4594316186372978,2,System.out.println(num + "
3.4594316186372978,2,System.out.println(c + "
3.4594316186372978,2,System.out.println(originalInteger + "
3.4594316186372978,2,out.println(originalInteger + " i
3.4594316186372978,2,out.println(year + " i
3.4594316186372978,2,out.println(num + " i
3.4594316186372978,2,out.println(c + " i
11.491983086292903,10,public static void main(String[] args
11.491983086292903,10,c static void main(String[] args
3.4594316186372978,2,out.println(originalInteger + " is
3.4594316186372978,2,out.println(year + " is
3.4594316186372978,2,out.println(num + " is
3.4594316186372978,2,out.println(c + " is
11.491983086292903,10,public static void main(String[] a
11.491983086292903,10,c static void main(String[] a
3.4594316186372978,2,i <= num; ++i)
3.4594316186372978,2,1; i <= num; +
3.4594316186372978,2,1; i <= num; ++
3.4594316186372978,2,i <= num; ++i) 
3.5849625007211565,2,1; i <= num; ++i
11.908987650263265,10,public static void main(String[] args)
11.908987650263265,10,c static void main(String[] args)
3.5849625007211565,2,i <= num; ++i) {
3.5849625007211565,2,1; i <= num; ++
3.5849625007211565,2,out.println(num + " is 
3.5849625007211565,2,i <= num; ++i) 
3.5849625007211565,2,System.out.println(originalInteger + " 
3.5849625007211565,2,out.println(year + " is 
3.5849625007211565,2,out.println(c + " is 
3.5849625007211565,2,System.out.println(num + " 
3.5849625007211565,2,out.println(originalInteger + " is 
3.5849625007211565,2,System.out.println(year + " 
3.5849625007211565,2,System.out.println(c + " 
3.700439718141092,2,System.out.println(num + " i
3.700439718141092,2,System.out.println(year + " i
3.700439718141092,2,System.out.println(originalInteger + " i
3.700439718141092,2,1; i <= num; ++i
3.700439718141092,2,System.out.println(c + " i
3.700439718141092,2,System.out.println(num + " is
3.700439718141092,2,System.out.println(year + " is
3.700439718141092,2,System.out.println(originalInteger + " is
3.700439718141092,2,System.out.println(c + " is
3.700439718141092,2,1; i <= num; ++i)
3.700439718141092,2,i <= num; ++i) {
3.8073549220576037,2,1; i <= num; ++i)
3.8073549220576037,2,System.out.println(num + " is 
3.8073549220576037,2,System.out.println(originalInteger + " is 
3.8073549220576037,2,System.out.println(c + " is 
3.8073549220576037,2,System.out.println(year + " is 
3.8073549220576037,2,1; i <= num; ++i) 
3.9068905956085187,2,1; i <= num; ++i) {
3.9068905956085187,2,1; i <= num; ++i) 
4.0,2,1; i <= num; ++i) {
