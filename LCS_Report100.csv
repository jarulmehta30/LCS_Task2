4.321928094887363,20,year.
4.321928094887363,20,alphabet.
4.321928094887363,20,palindrome.
4.321928094887363,20,number.
4.321928094887363,20,java.
3.321928094887362,10,method.
4.321928094887363,20,util.
7.569855608330948,190,out.
4.906890595608519,30,sc.
4.321928094887363,20,a.
4.906890595608519,30,c.
3.321928094887362,10,d.
3.321928094887362,10,"About to encounter a method.
7.643856189774725,200,System.
5.321928094887362,40,10;
3.321928094887362,10,';
6.129283016944966,70,0;
5.643856189774724,50,1;
5.643856189774724,50,2;
4.321928094887363,20,t2;
3.321928094887362,10,1900;
3.321928094887362,10,29;
4.321928094887363,20,sum;
3.321928094887362,10,num2;
3.321928094887362,10,break;
5.643856189774724,50,i;
3.321928094887362,10,n;
3.321928094887362,10,originalInteger;
4.906890595608519,30,num;
4.906890595608519,30,true;
3.321928094887362,10,Scanner;
5.321928094887362,40,false;
3.321928094887362,10,remainder;
6.643856189774724,100,in(
3.321928094887362,10,"Printing from inside myMethod(
3.321928094887362,10,close(
4.906890595608519,30,d(
8.022367813028454,260,n(
4.906890595608519,30,myMethod(
6.643856189774724,100,main(
3.321928094887362,10,Scanner(
3.321928094887362,10,printf(
7.321928094887362,160,println(
4.321928094887363,20,nextInt(
4.321928094887363,20,int(
4.321928094887363,20,print(
3.321928094887362,10,"Enter First Number: ")
3.321928094887362,10,"Enter Second Number: ")
7.321928094887362,160,")
3.321928094887362,10,in)
4.321928094887363,20,')
5.321928094887362,40,0)
3.321928094887362,10,flag)
3.321928094887362,10,factorial)
4.321928094887363,20,sum)
3.321928094887362,10,'z')
3.321928094887362,10,leap)
5.321928094887362,40,i)
3.321928094887362,10,n)
3.321928094887362,10,'Z')
3.321928094887362,10,reversedInteger)
6.643856189774724,100,args)
3.321928094887362,10,i+
3.321928094887362,10,"Sum of these numbers: " +
3.321928094887362,10,"First " +
3.321928094887362,10,i++
3.321928094887362,10,"Factorial of %
3.321928094887362,10,'*
3.321928094887362,10,"Hello World!
3.321928094887362,10,d!
3.321928094887362,10,"Method was executed successfully!
6.321928094887362,80,year 
3.321928094887362,10,palindrome 
6.129283016944966,70,else 
6.491853096329675,90,if 
3.321928094887362,10,10 
4.906890595608519,30,prime 
7.022367813028455,130," 
4.321928094887363,20,method 
4.321928094887363,20,in 
3.321928094887362,10,terms: 
4.321928094887363,20,' 
6.781359713524659,110,is 
3.321928094887362,10,orignalInteger 
5.321928094887362,40,an 
5.321928094887362,40,0 
6.129283016944966,70,1 
5.321928094887362,40,2 
3.321928094887362,10,4 
3.321928094887362,10,400 
3.321928094887362,10,< 
5.321928094887362,40,t1 
4.321928094887363,20,t2 
3.321928094887362,10,SumNatural 
4.321928094887363,20,flag 
5.321928094887362,40,factorial 
5.906890595608519,60,sum 
3.321928094887362,10,'a' 
3.321928094887362,10,long 
3.321928094887362,10,out 
3.321928094887362,10,sc 
3.321928094887362,10,are 
3.321928094887362,10,by 
4.321928094887363,20,num1 
6.321928094887362,80,leap 
3.321928094887362,10,num2 
6.321928094887362,80,a 
8.569855608330947,380,c 
7.643856189774725,200,d 
6.906890595608518,120,i 
3.321928094887362,10,LeapYear 
3.321928094887362,10,'A' 
6.491853096329675,90,n 
3.321928094887362,10,the 
3.321928094887362,10,AddTwoNumbers2 
5.321928094887362,40,reversedInteger 
3.321928094887362,10,stored 
3.321928094887362,10,char 
5.321928094887362,40,originalInteger 
3.321928094887362,10,nonprime 
6.781359713524659,110,num 
6.643856189774724,100,String[] 
3.321928094887362,10,integer 
3.321928094887362,10,while 
3.321928094887362,10,new 
6.781359713524659,110,static 
6.781359713524659,110,void 
3.321928094887362,10,Palindrome 
3.321928094887362,10,divisible 
3.321928094887362,10,condition 
3.321928094887362,10,Alphabet 
3.321928094887362,10,Scanner 
3.321928094887362,10,private 
3.321928094887362,10,Prime 
4.321928094887363,20,import 
5.906890595608519,60,for 
4.321928094887363,20,Factorial 
5.321928094887362,40,not 
7.569855608330948,190,public 
3.321928094887362,10,and 
3.321928094887362,10,hence 
3.321928094887362,10,Fibonacci 
6.643856189774724,100,class 
7.022367813028455,130,int 
3.321928094887362,10,100 
4.321928094887363,20,boolean 
3.321928094887362,10,file1 
3.321928094887362,10,remainder 
3.321928094887362,10,Main 
3.321928094887362,10,reversed 
6.850093961209696,20,java.util
6.850093961209696,20,a.util
5.265131460488539,10,new Scanner
5.265131460488539,10,util.Scanner
5.265131460488539,10,Scanner(System
5.265131460488539,10,System.in
6.850093961209696,20,d in
5.265131460488539,10,stored in
5.265131460488539,10,reversed in
11.997937275078288,190,System.out
11.604981463373162,160,out.println
5.265131460488539,10,println("Enter First Number: "
5.265131460488539,10,n("Enter First Number: "
6.850093961209696,20,c.nextInt
6.850093961209696,20,sc.nextInt
5.265131460488539,10,println("Enter Second Number: "
5.265131460488539,10,n("Enter Second Number: "
5.265131460488539,10,c.close
5.265131460488539,10,sc.close
5.265131460488539,10,println("Sum of these numbers: " 
5.265131460488539,10,n("Sum of these numbers: " 
5.265131460488539,10,'*'
5.265131460488539,10,"About to encounter a method."
5.265131460488539,10,int("
5.265131460488539,10,d!"
6.850093961209696,20,year."
5.265131460488539,10,d."
5.265131460488539,10,"Method was executed successfully!"
10.020018962652006,80,println("
10.020018962652006,80,n("
6.850093961209696,20,palindrome."
5.265131460488539,10,print("
5.265131460488539,10,method."
5.265131460488539,10,"Hello World!"
6.850093961209696,20,alphabet."
6.850093961209696,20,number."
5.265131460488539,10,terms: "
5.265131460488539,10,printf("
5.265131460488539,10,System.i
8.945300420255922,50,int i
6.850093961209696,20,d i
10.020018962652006,80," i
5.265131460488539,10,integer i
6.850093961209696,20,year i
5.265131460488539,10,stored i
5.265131460488539,10,palindrome i
5.265131460488539,10,reversed i
5.265131460488539,10,out.printf
5.265131460488539,10,printf("Factorial of 
11.997937275078288,190,out.print
5.265131460488539,10,int("First " 
5.265131460488539,10,print("First " 
5.265131460488539,10,println("Hello World
5.265131460488539,10,n("Hello World
5.265131460488539,10,boolean leap
5.265131460488539,10,n leap
5.265131460488539,10,an leap
7.7772375891808005,30,a leap
5.265131460488539,10,boolean flag
5.265131460488539,10,n flag
5.265131460488539,10,an flag
6.850093961209696,20,println("Sum 
6.850093961209696,20,n("Sum 
5.265131460488539,10,println("About to encounter a method
5.265131460488539,10,n("About to encounter a method
5.265131460488539,10,println("Method was executed successfully
5.265131460488539,10,n("Method was executed successfully
5.265131460488539,10,println("Printing from inside myMethod
5.265131460488539,10,n("Printing from inside myMethod
6.850093961209696,20,import java
10.289343717873061,90,c class
10.289343717873061,90,public class
5.265131460488539,10,class AddTwoNumbers2
10.530262920977078,100,c static
5.265131460488539,10,private static
10.530262920977078,100,public static
10.748200849837746,110,c void
10.748200849837746,110,static void
10.530262920977078,100,d main
10.530262920977078,100,void main
10.530262920977078,100,n(String[]
10.530262920977078,100,in(String[]
10.530262920977078,100,main(String[]
10.530262920977078,100,String[] args
5.265131460488539,10,d int
5.265131460488539,10,reversed int
5.265131460488539,10,int num1
5.265131460488539,10,int sum
5.265131460488539,10,Scanner sc
5.265131460488539,10,class Alphabet
10.289343717873061,90,c c
5.265131460488539,10,char c
5.265131460488539,10,c.c
10.289343717873061,90,public c
5.265131460488539,10,d c
6.850093961209696,20,println(c
6.850093961209696,20,n(c
5.265131460488539,10,method c
5.265131460488539,10,sc.c
5.265131460488539,10,palindrome if
6.850093961209696,20,c >
6.850093961209696,20,c <
8.945300420255922,50,i <
10.020018962652006,80," is
5.265131460488539,10,integer is
6.850093961209696,20,year is
5.265131460488539,10,orignalInteger an
5.265131460488539,10,is an
5.265131460488539,10,not an
6.850093961209696,20,n alphabet
6.850093961209696,20,an alphabet
8.43505646193085,40,is not
5.265131460488539,10,class Factorial
5.265131460488539,10,nonprime num
7.7772375891808005,30,prime num
8.945300420255922,50,int num
6.850093961209696,20,println(num
6.850093961209696,20,n(num
5.265131460488539,10,< 10
5.265131460488539,10,long factorial
5.265131460488539,10,< 1
5.265131460488539,10,n for
5.265131460488539,10,condition for
5.265131460488539,10,is d
5.265131460488539,10,d d
5.265131460488539,10,"Factorial of %d
5.265131460488539,10,method d
5.265131460488539,10,class Fibonacci
5.265131460488539,10,nonprime n
7.7772375891808005,30,prime n
9.362200089901958,60,int n
6.850093961209696,20,c.n
8.43505646193085,40,is n
5.265131460488539,10,for n
6.850093961209696,20,println(n
6.850093961209696,20,n(n
6.850093961209696,20,sc.n
5.265131460488539,10,int(t1
5.265131460488539,10,print(t1
5.265131460488539,10," terms:
5.265131460488539,10,class file1
5.265131460488539,10,class LeapYear
5.265131460488539,10,int year
6.850093961209696,20,println(year
6.850093961209696,20,n(year
7.7772375891808005,30,leap year
5.265131460488539,10,the year
5.265131460488539,10,by 4
5.265131460488539,10,is divisible
5.265131460488539,10,divisible by
5.265131460488539,10,by 400
5.265131460488539,10,hence the
10.530262920977078,100,String[] a
5.265131460488539,10,orignalInteger a
8.945300420255922,50,is a
5.265131460488539,10,reversedInteger a
6.850093961209696,20,n a
6.850093961209696,20,an a
8.43505646193085,40,not a
5.265131460488539,10,class Palindrome
5.265131460488539,10,and reversedInteger
5.265131460488539,10,d reversedInteger
6.850093961209696,20,println(originalInteger
6.850093961209696,20,n(originalInteger
5.265131460488539,10,and reversed
5.265131460488539,10,d reversed
5.265131460488539,10,d integer
5.265131460488539,10,reversed integer
5.265131460488539,10,is stored
5.265131460488539,10,n variable
5.265131460488539,10,in variable
6.850093961209696,20,a palindrome
5.265131460488539,10,if orignalInteger
5.265131460488539,10,orignalInteger and
5.265131460488539,10,reversedInteger are
5.265131460488539,10,are equal
5.265131460488539,10,class Prime
5.265131460488539,10,for nonprime
5.265131460488539,10,nonprime number
7.7772375891808005,30,prime number
6.850093961209696,20,a prime
5.265131460488539,10,class SumNatural
5.265131460488539,10,class Main
5.265131460488539,10,a method
5.265131460488539,10,d call
5.265131460488539,10,method call
5.265131460488539,10,d myMethod
5.265131460488539,10,void myMethod
5.265131460488539,10,d definition
5.265131460488539,10,method definition
6.850093961209696,20,sum);
11.604981463373162,160,");
5.265131460488539,10,factorial);
5.265131460488539,10,"Enter First Number: ");
5.265131460488539,10,n);
5.265131460488539,10,"Enter Second Number: ");
5.265131460488539,10,in);
8.945300420255922,50,for (
10.020018962652006,80,if (
5.265131460488539,10,while (
5.265131460488539,10,close()
5.265131460488539,10,'Z'))
7.7772375891808005,30,d()
5.265131460488539,10,"Printing from inside myMethod()
6.850093961209696,20,nextInt()
5.265131460488539,10,i++)
7.7772375891808005,30,myMethod()
5.265131460488539,10,'))
5.265131460488539,10,0 )
5.265131460488539,10,Main {
5.265131460488539,10,1 {
5.265131460488539,10,SumNatural {
5.265131460488539,10,2 {
5.265131460488539,10,LeapYear {
5.265131460488539,10,Prime {
5.265131460488539,10,Factorial {
5.265131460488539,10,n {
5.265131460488539,10,file1 {
5.265131460488539,10,in {
5.265131460488539,10,Palindrome {
5.265131460488539,10,Fibonacci {
9.714683738164807,70,else {
5.265131460488539,10,i {
5.265131460488539,10,AddTwoNumbers2 {
5.265131460488539,10,Alphabet {
6.850093961209696,20,sum +
7.7772375891808005,30,1 +
6.850093961209696,20,c +
8.43505646193085,40," +
5.265131460488539,10,num1 +
6.850093961209696,20,year +
6.850093961209696,20,num +
5.265131460488539,10,n +
6.850093961209696,20,t1 +
6.850093961209696,20,originalInteger +
5.265131460488539,10,10 +
5.265131460488539,10,i++
5.265131460488539,10,0 +
5.265131460488539,10,sum +=
7.7772375891808005,30,year %
6.850093961209696,20,num %
5.265131460488539,10,num /
5.265131460488539,10,reversedInteger *
6.850093961209696,20,factorial *
5.265131460488539,10,util.*
5.265131460488539,10,factorial *=
5.265131460488539,10,100 ==
5.265131460488539,10,4 ==
5.265131460488539,10,400 ==
5.265131460488539,10,i ==
5.265131460488539,10,originalInteger ==
6.850093961209696,20,0 ==
5.265131460488539,10,'A' &&
5.265131460488539,10,'a' &&
6.850093961209696,20,' &&
5.265131460488539,10,'A' &
5.265131460488539,10,'a' &
6.850093961209696,20,' &
5.265131460488539,10,num !
6.850093961209696,20,0; 
7.7772375891808005,30,1; 
5.265131460488539,10,"First " + 
6.850093961209696,20,num; 
5.265131460488539,10,'z') 
6.850093961209696,20,2; 
5.265131460488539,10,reversedInteger) 
5.265131460488539,10,num  
5.265131460488539,10,"Sum of these numbers: " + 
5.265131460488539,10,n; 
5.265131460488539,10,leap) 
8.43505646193085,40,i) 
5.265131460488539,10,') 
5.265131460488539,10,flag) 
8.43505646193085,40,0) 
5.265131460488539,10,10; 
6.850093961209696,20,c <=
8.43505646193085,40,i <=
6.850093961209696,20,c >=
10.643856189774723,40,for (in
6.643856189774724,10,is di
6.643856189774724,10,2; i
9.813781191217037,30,1; i
11.287712379549449,50,for (i
8.643856189774725,20,0; i
6.643856189774724,10,10; i
6.643856189774724,10,if (leap
10.643856189774723,40,for (int
6.643856189774724,10,"Sum of these numbers: " + sum
6.643856189774724,10,printf("Factorial
6.643856189774724,10,if (num
6.643856189774724,10,int num1
6.643856189774724,10,orignalInteger and
6.643856189774724,10,not an
6.643856189774724,10,"First " + n
6.643856189774724,10,orignalInteger an
6.643856189774724,10,is an
6.643856189774724,10,reversed in
6.643856189774724,10,System.in
6.643856189774724,10,stored in
8.643856189774725,20,d in
6.643856189774724,10,if (n
6.643856189774724,10,by 40
6.643856189774724,10,< 10
6.643856189774724,10,if (year
6.643856189774724,10,method ca
6.643856189774724,10,d ca
6.643856189774724,10,if (originalInteger
8.643856189774725,20,an alphabet.
15.139711216661896,190,System.out.
8.643856189774725,20,a palindrome.
8.643856189774725,20,leap year.
8.643856189774725,20,a.util.
6.643856189774724,10,println("About to encounter a method.
8.643856189774725,20,java.util.
6.643856189774724,10,n("About to encounter a method.
6.643856189774724,10,a method.
8.643856189774725,20,n alphabet.
6.643856189774724,10,Scanner(System.
8.643856189774725,20,import java.
8.643856189774725,20,prime number.
6.643856189774724,10,myMethod();
6.643856189774724,10,d();
6.643856189774724,10,< 10;
8.643856189774725,20,nextInt();
6.643856189774724,10,util.*;
6.643856189774724,10,close();
6.643856189774724,10,int i;
6.643856189774724,10,util.Scanner;
6.643856189774724,10,'*';
8.643856189774725,20,sc.nextInt(
8.643856189774725,20,c.nextInt(
8.643856189774725,20,out.print(
6.643856189774724,10,println("Printing from inside myMethod(
6.643856189774724,10,void myMethod(
6.643856189774724,10,new Scanner(
14.643856189774723,160,out.println(
13.287712379549449,100,d main(
6.643856189774724,10,c.close(
6.643856189774724,10,sc.close(
6.643856189774724,10,n("Printing from inside myMethod(
6.643856189774724,10,out.printf(
13.287712379549449,100,void main(
6.643856189774724,10,d myMethod(
6.643856189774724,10,"Hello World!")
6.643856189774724,10,n("Enter Second Number: ")
6.643856189774724,10,"About to encounter a method.")
8.643856189774725,20,year.")
6.643856189774724,10,n("Enter First Number: ")
8.643856189774725,20,alphabet.")
6.643856189774724,10,println("Enter Second Number: ")
6.643856189774724,10,d.")
6.643856189774724,10,"Method was executed successfully!")
8.643856189774725,20,number.")
6.643856189774724,10,terms: ")
6.643856189774724,10,d!")
6.643856189774724,10,i++)
8.643856189774725,20,palindrome.")
6.643856189774724,10,System.in)
6.643856189774724,10,method.")
13.287712379549449,100,String[] args)
6.643856189774724,10,println("Enter First Number: ")
6.643856189774724,10,leap) {
10.643856189774723,40,i) {
10.643856189774723,40,0) {
6.643856189774724,10,reversedInteger) {
6.643856189774724,10,flag) {
6.643856189774724,10,n; +
6.643856189774724,10,int("First " +
6.643856189774724,10,n("Sum of these numbers: " +
6.643856189774724,10,2; +
8.643856189774725,20,num; +
6.643856189774724,10,print("First " +
6.643856189774724,10,println("Sum of these numbers: " +
6.643856189774724,10,n; ++
6.643856189774724,10,2; ++
8.643856189774725,20,num; ++
6.643856189774724,10,printf("Factorial of %
6.643856189774724,10,num  /
6.643856189774724,10,num  /=
8.643856189774725,20,' &&
6.643856189774724,10,'a' &&
6.643856189774724,10,'A' &&
6.643856189774724,10,'z') ||
6.643856189774724,10,') ||
6.643856189774724,10,myMethod()!
6.643856189774724,10,d()!
6.643856189774724,10,n("Hello World!
6.643856189774724,10,println("Method was executed successfully!
6.643856189774724,10,println("Hello World!
6.643856189774724,10,"Printing from inside myMethod()!
6.643856189774724,10,n("Method was executed successfully!
6.643856189774724,10,if (!
6.643856189774724,10,divisible by 
6.643856189774724,10,n for 
6.643856189774724,10,int sum 
6.643856189774724,10,d integer 
9.813781191217037,30,not a 
6.643856189774724,10,factorial *= 
6.643856189774724,10,stored in 
8.643856189774725,20,n(c 
12.98370619265935,90,c class 
8.643856189774725,20,a prime 
6.643856189774724,10,0 ) 
6.643856189774724,10,reversed integer 
6.643856189774724,10,0 + 
6.643856189774724,10,i < 
6.643856189774724,10,orignalInteger and 
6.643856189774724,10,d in 
8.643856189774725,20,num % 
6.643856189774724,10,num / 
8.643856189774725,20,num + 
6.643856189774724,10,class SumNatural 
8.643856189774725,20,n(originalInteger 
6.643856189774724,10,n leap 
8.643856189774725,20,c <= 
6.643856189774724,10,n flag 
6.643856189774724,10,100 == 
6.643856189774724,10,10 + 
8.643856189774725,20,println(c 
6.643856189774724,10,'a' && 
6.643856189774724,10,i == 
6.643856189774724,10,is stored 
6.643856189774724,10,while ( 
6.643856189774724,10,for nonprime 
6.643856189774724,10,reversedInteger * 
8.643856189774725,20,n(year 
8.643856189774725,20,println(originalInteger 
6.643856189774724,10,not an 
8.643856189774725,20,originalInteger + 
6.643856189774724,10,integer is 
10.643856189774723,40,i <= 
6.643856189774724,10,class Main 
6.643856189774724,10,factorial * 
8.643856189774725,20,c >= 
8.643856189774725,20,println(year 
9.813781191217037,30,a leap 
6.643856189774724,10,originalInteger == 
6.643856189774724,10,long factorial 
6.643856189774724,10,class Alphabet 
6.643856189774724,10,char c 
6.643856189774724,10,class file1 
10.643856189774723,40,is a 
6.643856189774724,10,class AddTwoNumbers2 
12.98370619265935,90,public class 
6.643856189774724,10,print(t1 
6.643856189774724,10,and reversedInteger 
6.643856189774724,10,num1 + 
6.643856189774724,10,boolean flag 
6.643856189774724,10,n + 
6.643856189774724,10,boolean leap 
13.287712379549449,100,in(String[] 
6.643856189774724,10,4 == 
13.287712379549449,100,main(String[] 
6.643856189774724,10,palindrome if 
6.643856189774724,10,sum + 
6.643856189774724,10,is an 
6.643856189774724,10,hence the 
6.643856189774724,10,Scanner sc 
9.813781191217037,30,year % 
6.643856189774724,10," terms: 
6.643856189774724,10,class Palindrome 
8.643856189774725,20,t1 + 
8.643856189774725,20,year + 
6.643856189774724,10,private static 
10.643856189774723,40,int num 
8.643856189774725,20,' && 
10.643856189774723,40,is not 
6.643856189774724,10,if orignalInteger 
13.562719427049318,110,static void 
8.643856189774725,20,year is 
6.643856189774724,10,d reversedInteger 
6.643856189774724,10,'A' && 
13.287712379549449,100,c static 
6.643856189774724,10,int(t1 
6.643856189774724,10,the year 
6.643856189774724,10,is divisible 
6.643856189774724,10,400 == 
10.643856189774723,40,int i 
6.643856189774724,10,int n 
8.643856189774725,20,0 == 
6.643856189774724,10,')) 
6.643856189774724,10,sum += 
6.643856189774724,10,class Prime 
8.643856189774725,20,println(num 
6.643856189774724,10,an flag 
6.643856189774724,10,an leap 
6.643856189774724,10,class LeapYear 
10.643856189774723,40," + 
8.643856189774725,20,c + 
6.643856189774724,10,class Factorial 
13.287712379549449,100,public static 
6.643856189774724,10,"Factorial of %d 
9.813781191217037,30,if ( 
13.287712379549449,100,n(String[] 
13.562719427049318,110,c void 
6.643856189774724,10,'Z')) 
12.643856189774723,80," is 
8.643856189774725,20,n(num 
6.643856189774724,10,i++) 
6.643856189774724,10,condition for 
6.643856189774724,10,reversedInteger are 
6.643856189774724,10,int year 
6.643856189774724,10,class Fibonacci 
9.813781191217037,30,1 + 
10.035206267601982,20,import java.util
7.7132781727146185,10,a.util.Scanner
7.7132781727146185,10,java.util.Scanner
7.7132781727146185,10,new Scanner(System
7.7132781727146185,10,Scanner(System.in
7.7132781727146185,10,is stored in
17.000990552264067,160,System.out.println
7.7132781727146185,10,out.println("Enter First Number: "
7.7132781727146185,10,out.println("Enter Second Number: "
7.7132781727146185,10,out.println("Sum of these numbers: " 
10.035206267601982,20,c <= '
10.035206267601982,20,c >= '
10.035206267601982,20,prime number."
10.035206267601982,20,a palindrome."
7.7132781727146185,10," + "
10.035206267601982,20,c + "
7.7132781727146185,10,out.printf("
7.7132781727146185,10,n("Method was executed successfully!"
7.7132781727146185,10,t1 + "
7.7132781727146185,10,d()!"
7.7132781727146185,10,n + "
10.035206267601982,20,num + "
7.7132781727146185,10," terms: "
7.7132781727146185,10,n("Hello World!"
10.035206267601982,20,leap year."
7.7132781727146185,10,println("About to encounter a method."
10.035206267601982,20,year + "
7.7132781727146185,10,myMethod()!"
10.035206267601982,20,originalInteger + "
10.035206267601982,20,n alphabet."
14.679062457376705,80,out.println("
7.7132781727146185,10,println("Hello World!"
7.7132781727146185,10,"Printing from inside myMethod()!"
10.035206267601982,20,an alphabet."
7.7132781727146185,10,out.print("
7.7132781727146185,10,a method."
7.7132781727146185,10,1 + "
7.7132781727146185,10,n("About to encounter a method."
7.7132781727146185,10,println("Method was executed successfully!"
7.7132781727146185,10,factorial * i
7.7132781727146185,10,2; ++i
7.7132781727146185,10,sum += i
7.7132781727146185,10,n; ++i
7.7132781727146185,10,Scanner(System.i
7.7132781727146185,10,factorial *= i
7.7132781727146185,10,num % i
7.7132781727146185,10,reversed integer i
10.035206267601982,20,num; ++i
7.7132781727146185,10,is stored i
7.7132781727146185,10,sum + i
7.7132781727146185,10,the year i
7.7132781727146185,10,d integer i
7.7132781727146185,10,System.out.printf
7.7132781727146185,10,out.printf("Factorial of 
17.576660411224296,190,System.out.print
7.7132781727146185,10,out.print("First " 
7.7132781727146185,10,out.println("Hello World
7.7132781727146185,10,not a leap
10.035206267601982,20,is a leap
7.7132781727146185,10,if (!flag
10.035206267601982,20,out.println("Sum 
7.7132781727146185,10,out.println("About to encounter a method
7.7132781727146185,10,out.println("Method was executed successfully
7.7132781727146185,10,out.println("Printing from inside myMethod
7.7132781727146185,10,public class AddTwoNumbers2
7.7132781727146185,10,c class AddTwoNumbers2
15.426556345429237,100,c static void
15.426556345429237,100,public static void
7.7132781727146185,10,private static void
15.426556345429237,100,static void main
15.426556345429237,100,c void main
15.426556345429237,100,d main(String[]
15.426556345429237,100,void main(String[]
15.426556345429237,100,main(String[] args
15.426556345429237,100,n(String[] args
15.426556345429237,100,in(String[] args
7.7132781727146185,10,num1 + num2
7.7132781727146185,10,1 + num2
10.035206267601982,20," + sum
7.7132781727146185,10,public class Alphabet
7.7132781727146185,10,c class Alphabet
7.7132781727146185,10,'A' && c
10.035206267601982,20,out.println(c
7.7132781727146185,10,'a' && c
10.035206267601982,20,' && c
7.7132781727146185,10,c >= 'a'
7.7132781727146185,10,c <= 'z'
7.7132781727146185,10,c >= 'A'
7.7132781727146185,10,c <= 'Z'
7.7132781727146185,10,reversed integer is
7.7132781727146185,10,the year is
7.7132781727146185,10,d integer is
7.7132781727146185,10,is not an
7.7132781727146185,10," is an
7.7132781727146185,10,if orignalInteger an
7.7132781727146185,10,not an alphabet
7.7132781727146185,10,is an alphabet
12.357134362489344,40," is not
7.7132781727146185,10,public class Factorial
7.7132781727146185,10,c class Factorial
7.7132781727146185,10,for nonprime num
7.7132781727146185,10,num1 + num
10.035206267601982,20,a prime num
7.7132781727146185,10,while ( num
10.035206267601982,20,out.println(num
11.393447132482004,30,i <= num
7.7132781727146185,10,1 + num
7.7132781727146185,10,i < 10
7.7132781727146185,10,num % 10
7.7132781727146185,10,reversedInteger * 10
7.7132781727146185,10,year % 10
7.7132781727146185,10,i < 1
7.7132781727146185,10,num % 1
7.7132781727146185,10,reversedInteger * 1
7.7132781727146185,10,year % 1
7.7132781727146185,10,orignalInteger and
7.7132781727146185,10,printf("Factorial of %d
7.7132781727146185,10,year is d
7.7132781727146185,10,public class Fibonacci
7.7132781727146185,10,c class Fibonacci
7.7132781727146185,10," + n
7.7132781727146185,10,for nonprime n
7.7132781727146185,10,num1 + n
10.035206267601982,20,a prime n
7.7132781727146185,10,while ( n
12.357134362489344,40," is n
10.035206267601982,20,out.println(n
7.7132781727146185,10,n for n
12.357134362489344,40,i <= n
7.7132781727146185,10,condition for n
12.357134362489344,40,for (in
7.7132781727146185,10,1 + n
7.7132781727146185,10,out.print(t1
10.035206267601982,20,0 == 0
7.7132781727146185,10,4 == 0
7.7132781727146185,10,400 == 0
7.7132781727146185,10,by 400
7.7132781727146185,10,100 == 0
7.7132781727146185,10,i == 0
7.7132781727146185,10,t1 + t2
7.7132781727146185,10,1 + t2
7.7132781727146185,10,public class file1
7.7132781727146185,10,c class file1
7.7132781727146185,10,public class LeapYear
7.7132781727146185,10,c class LeapYear
7.7132781727146185,10,hence the year
11.393447132482004,30,a leap year
10.035206267601982,20,out.println(year
10.035206267601982,20,if ( year
7.7132781727146185,10,divisible by 4
10.035206267601982,20,year % 4
7.7132781727146185,10,year % 100
7.7132781727146185,10,year is divisible
7.7132781727146185,10,is divisible by
7.7132781727146185,10,divisible by 400
7.7132781727146185,10,year % 400
7.7132781727146185,10,not an a
7.7132781727146185,10,is an a
7.7132781727146185,10,and reversedInteger a
12.357134362489344,40,is not a
15.426556345429237,100,main(String[] a
7.7132781727146185,10,d reversedInteger a
12.357134362489344,40," is a
15.426556345429237,100,n(String[] a
15.426556345429237,100,in(String[] a
7.7132781727146185,10,if orignalInteger a
7.7132781727146185,10,year is a
7.7132781727146185,10,public class Palindrome
7.7132781727146185,10,c class Palindrome
7.7132781727146185,10,orignalInteger and reversedInteger
7.7132781727146185,10,originalInteger == reversedInteger
7.7132781727146185,10,10 + remainder
7.7132781727146185,10,0 + remainder
10.035206267601982,20,out.println(originalInteger
7.7132781727146185,10,orignalInteger and reversed
7.7132781727146185,10,originalInteger == reversed
7.7132781727146185,10,integer is stored
7.7132781727146185,10,d in variable
7.7132781727146185,10,stored in variable
7.7132781727146185,10,not a palindrome
7.7132781727146185,10,is a palindrome
7.7132781727146185,10,palindrome if orignalInteger
7.7132781727146185,10,if orignalInteger and
7.7132781727146185,10,and reversedInteger are
7.7132781727146185,10,d reversedInteger are
7.7132781727146185,10,reversedInteger are equal
7.7132781727146185,10,public class Prime
7.7132781727146185,10,c class Prime
7.7132781727146185,10,num / 2
7.7132781727146185,10,n for nonprime
7.7132781727146185,10,condition for nonprime
7.7132781727146185,10,for nonprime number
10.035206267601982,20,a prime number
7.7132781727146185,10,not a prime
7.7132781727146185,10,is a prime
7.7132781727146185,10,public class SumNatural
7.7132781727146185,10,c class SumNatural
7.7132781727146185,10,static void myMethod
7.7132781727146185,10,c void myMethod
7.7132781727146185,10,terms: ");
7.7132781727146185,10,d.");
7.7132781727146185,10,System.in);
7.7132781727146185,10,< 10;
7.7132781727146185,10,n("Enter First Number: ");
7.7132781727146185,10,"Hello World!");
7.7132781727146185,10,println("Enter First Number: ");
10.035206267601982,20,alphabet.");
7.7132781727146185,10,n("Enter Second Number: ");
10.035206267601982,20,year.");
7.7132781727146185,10,"About to encounter a method.");
7.7132781727146185,10,println("Enter Second Number: ");
10.035206267601982,20,number.");
7.7132781727146185,10,"Method was executed successfully!");
7.7132781727146185,10,d!");
7.7132781727146185,10,method.");
10.035206267601982,20,palindrome.");
7.7132781727146185,10,if ( (
7.7132781727146185,10,d myMethod()
7.7132781727146185,10,"Sum of these numbers: " + sum)
7.7132781727146185,10,void myMethod()
7.7132781727146185,10,if (leap)
10.035206267601982,20,c.nextInt()
7.7132781727146185,10,println("Printing from inside myMethod()
7.7132781727146185,10,c.close()
7.7132781727146185,10,System.in)
7.7132781727146185,10,sc.close()
7.7132781727146185,10,n("Printing from inside myMethod()
10.035206267601982,20,sc.nextInt()
7.7132781727146185,10,class AddTwoNumbers2 {
7.7132781727146185,10,class Factorial {
7.7132781727146185,10,class Alphabet {
7.7132781727146185,10,'Z')) {
7.7132781727146185,10,class Palindrome {
7.7132781727146185,10,0 ) {
7.7132781727146185,10,class Fibonacci {
7.7132781727146185,10,class Main {
7.7132781727146185,10,class LeapYear {
7.7132781727146185,10,')) {
7.7132781727146185,10,class file1 {
7.7132781727146185,10,i++) {
7.7132781727146185,10,class SumNatural {
7.7132781727146185,10,class Prime {
7.7132781727146185,10,2; ++
10.035206267601982,20,println(c +
10.035206267601982,20,num; ++
10.035206267601982,20,n(year +
7.7132781727146185,10,int(t1 +
7.7132781727146185,10,print(t1 +
7.7132781727146185,10,n; ++
10.035206267601982,20,n(c +
7.7132781727146185,10,0; i+
10.035206267601982,20,n(originalInteger +
7.7132781727146185,10,10; i+
10.035206267601982,20,println(num +
10.035206267601982,20,println(originalInteger +
10.035206267601982,20,n(num +
10.035206267601982,20,println(year +
7.7132781727146185,10,0; i++
7.7132781727146185,10,10; i++
7.7132781727146185,10,a.util.*
7.7132781727146185,10,java.util.*
7.7132781727146185,10,stored in 
7.7132781727146185,10,2; i 
7.7132781727146185,10,orignalInteger and 
7.7132781727146185,10,d in 
7.7132781727146185,10,println("Sum of these numbers: " + 
12.357134362489344,40,for (int 
7.7132781727146185,10,printf("Factorial 
7.7132781727146185,10,"First " + n 
7.7132781727146185,10,'a' && 
7.7132781727146185,10,int("First " + 
7.7132781727146185,10,print("First " + 
7.7132781727146185,10,not an 
7.7132781727146185,10,num  /= 
7.7132781727146185,10,n("Sum of these numbers: " + 
7.7132781727146185,10,is an 
7.7132781727146185,10,< 10; 
7.7132781727146185,10,') || 
10.035206267601982,20,' && 
7.7132781727146185,10,'z') || 
7.7132781727146185,10,'A' && 
7.7132781727146185,10,0; i 
7.7132781727146185,10,for (i 
7.7132781727146185,10,if (year 
7.7132781727146185,10,if (num 
11.393447132482004,30,1; i 
7.7132781727146185,10,i++) 
7.7132781727146185,10,if (originalInteger 
8.587059555375902,10,2; ++i
8.587059555375902,10,n; ++i
8.587059555375902,10,year is di
8.587059555375902,10,< 10; i
11.17202205609706,20,num; ++i
13.756984556818212,40,for (int i
8.587059555375902,10,println("Sum of these numbers: " + sum
8.587059555375902,10,n("Sum of these numbers: " + sum
8.587059555375902,10,if ( (c
8.587059555375902,10,'A' && c
8.587059555375902,10,'a' && c
11.17202205609706,20,' && c
12.68412818478932,30,1; i <
8.587059555375902,10,2; i <
8.587059555375902,10,0; i <
8.587059555375902,10,not an alphabet
8.587059555375902,10,is an alphabet
8.587059555375902,10,out.printf("Factorial
8.587059555375902,10,num  /= 10
8.587059555375902,10,num  /= 1
8.587059555375902,10,if orignalInteger and
8.587059555375902,10,is not an
8.587059555375902,10,is stored in
8.587059555375902,10,int("First " + n
8.587059555375902,10,Scanner(System.in
8.587059555375902,10," is an
8.587059555375902,10,print("First " + n
8.587059555375902,10,if orignalInteger an
8.587059555375902,10,reversedInteger * 10
8.587059555375902,10,divisible by 40
8.587059555375902,10,year % 100
8.587059555375902,10,year % 40
8.587059555375902,10,year % 10
8.587059555375902,10,i < 10
8.587059555375902,10,num % 10
8.587059555375902,10,not an a
8.587059555375902,10,is an a
8.587059555375902,10,c >= 'a
8.587059555375902,10,orignalInteger and reversedInteger
8.587059555375902,10,orignalInteger and reversed
8.587059555375902,10,d in variable
8.587059555375902,10,stored in variable
8.587059555375902,10,1 + num2
8.587059555375902,10,num1 + num2
11.17202205609706,20,a leap year.
8.587059555375902,10,not a palindrome.
8.587059555375902,10,new Scanner(System.
11.17202205609706,20,a prime number.
8.587059555375902,10,out.println("About to encounter a method.
8.587059555375902,10,is an alphabet.
8.587059555375902,10,not an alphabet.
8.587059555375902,10,is a palindrome.
11.17202205609706,20,import java.util.
11.17202205609706,20,i <= num;
11.17202205609706,20,sc.nextInt();
8.587059555375902,10,num / 2;
8.587059555375902,10,10 + remainder;
8.587059555375902,10,a.util.*;
8.587059555375902,10,java.util.Scanner;
8.587059555375902,10,"Sum of these numbers: " + sum);
8.587059555375902,10,System.in);
8.587059555375902,10,a.util.Scanner;
8.587059555375902,10,0 + remainder;
8.587059555375902,10,sum += i;
11.17202205609706,20,c.nextInt();
8.587059555375902,10,sc.close();
8.587059555375902,10,i < 10;
8.587059555375902,10,c.close();
8.587059555375902,10,factorial *= i;
8.587059555375902,10,1 + num2;
8.587059555375902,10,java.util.*;
8.587059555375902,10,sum + i;
8.587059555375902,10,t1 + t2;
8.587059555375902,10,1 + t2;
8.587059555375902,10,num % 10;
8.587059555375902,10,num1 + num2;
8.587059555375902,10,factorial * i;
8.587059555375902,10,i <= n;
18.926909558260526,160,System.out.println(
8.587059555375902,10,c void myMethod(
11.17202205609706,20,System.out.print(
8.587059555375902,10,System.out.printf(
8.587059555375902,10,out.println("Printing from inside myMethod(
17.174119110751803,100,static void main(
8.587059555375902,10,'z') || (
8.587059555375902,10,') || (
8.587059555375902,10,static void myMethod(
17.174119110751803,100,c void main(
8.587059555375902,10,i == 0)
8.587059555375902,10,2; ++i)
8.587059555375902,10,c <= 'Z')
8.587059555375902,10,"Printing from inside myMethod()!")
8.587059555375902,10,10; i++)
8.587059555375902,10,c <= 'z')
8.587059555375902,10,originalInteger == reversedInteger)
11.17202205609706,20,0 == 0)
8.587059555375902,10,myMethod()!")
8.587059555375902,10,4 == 0)
11.17202205609706,20,prime number.")
11.17202205609706,20,leap year.")
11.17202205609706,20,a palindrome.")
11.17202205609706,20,num; ++i)
8.587059555375902,10,if (!flag)
11.17202205609706,20,n alphabet.")
8.587059555375902,10,println("Hello World!")
8.587059555375902,10,a method.")
11.17202205609706,20," + sum)
8.587059555375902,10,0; i++)
8.587059555375902,10,d()!")
17.174119110751803,100,in(String[] args)
17.174119110751803,100,main(String[] args)
8.587059555375902,10,n; ++i)
8.587059555375902,10," terms: ")
8.587059555375902,10,Scanner(System.in)
17.174119110751803,100,n(String[] args)
8.587059555375902,10,println("About to encounter a method.")
8.587059555375902,10,out.println("Enter First Number: ")
8.587059555375902,10,n("About to encounter a method.")
11.17202205609706,20,an alphabet.")
8.587059555375902,10,n("Method was executed successfully!")
8.587059555375902,10,100 == 0)
8.587059555375902,10,n("Hello World!")
8.587059555375902,10," + ")
8.587059555375902,10,out.println("Enter Second Number: ")
8.587059555375902,10,400 == 0)
8.587059555375902,10,println("Method was executed successfully!")
8.587059555375902,10,i++) {
8.587059555375902,10,out.print("First " +
8.587059555375902,10,"First " + n +
8.587059555375902,10,0; i++
8.587059555375902,10,10; i++
8.587059555375902,10,out.println("Sum of these numbers: " +
8.587059555375902,10,out.printf("Factorial of %
8.587059555375902,10,if (num %
8.587059555375902,10,if (year %
8.587059555375902,10,if (originalInteger ==
8.587059555375902,10,println("Printing from inside myMethod()!
8.587059555375902,10,out.println("Hello World!
8.587059555375902,10,out.println("Method was executed successfully!
8.587059555375902,10,n("Printing from inside myMethod()!
8.587059555375902,10,int(t1 + 
8.587059555375902,10,i <= num 
8.587059555375902,10,if (leap) 
8.587059555375902,10,year is divisible 
8.587059555375902,10,palindrome if orignalInteger 
8.587059555375902,10,public class AddTwoNumbers2 
8.587059555375902,10,'a' && c 
8.587059555375902,10,integer is stored 
8.587059555375902,10,c class Factorial 
8.587059555375902,10,is a prime 
8.587059555375902,10,n for nonprime 
8.587059555375902,10,not a leap 
8.587059555375902,10,public class Factorial 
8.587059555375902,10,1 + " 
8.587059555375902,10,orignalInteger and 
8.587059555375902,10," is an 
8.587059555375902,10,public class SumNatural 
8.587059555375902,10,c class Alphabet 
8.587059555375902,10,year % 400 
8.587059555375902,10,public class file1 
8.587059555375902,10,public class Prime 
8.587059555375902,10,reversed integer is 
8.587059555375902,10,c class AddTwoNumbers2 
8.587059555375902,10,c class SumNatural 
8.587059555375902,10,the year is 
17.174119110751803,100,void main(String[] 
12.68412818478932,30,is not a 
8.587059555375902,10,c class Prime 
11.17202205609706,20,out.println(year 
8.587059555375902,10,year % 4 
8.587059555375902,10,year % 100 
8.587059555375902,10,n + " 
8.587059555375902,10,private static void 
8.587059555375902,10,printf("Factorial of %d 
17.174119110751803,100,public static void 
8.587059555375902,10,not a prime 
8.587059555375902,10,public class Alphabet 
8.587059555375902,10,c >= 'a' 
13.756984556818212,40," is not 
11.17202205609706,20,n(originalInteger + 
8.587059555375902,10,'A' && c 
8.587059555375902,10,c >= 'A' 
8.587059555375902,10,public class Fibonacci 
11.17202205609706,20,is a leap 
8.587059555375902,10,year is a 
11.17202205609706,20,out.println(c 
8.587059555375902,10,d reversedInteger are 
11.17202205609706,20,out.println(num 
11.17202205609706,20,year + " 
8.587059555375902,10,hence the year 
8.587059555375902,10,c class Fibonacci 
8.587059555375902,10,while ( num 
8.587059555375902,10,num % i 
11.17202205609706,20,' && c 
8.587059555375902,10,< 10; 
17.174119110751803,100,d main(String[] 
8.587059555375902,10,is divisible by 
11.17202205609706,20,out.println(originalInteger 
8.587059555375902,10," + n 
8.587059555375902,10,is not an 
11.17202205609706,20,if ( year 
8.587059555375902,10,and reversedInteger are 
8.587059555375902,10,condition for nonprime 
8.587059555375902,10,c class file1 
8.587059555375902,10,d integer is 
11.17202205609706,20,println(originalInteger + 
11.17202205609706,20,num + " 
8.587059555375902,10,public class LeapYear 
8.587059555375902,10,c class Palindrome 
8.587059555375902,10,reversedInteger * 10 
8.587059555375902,10,print(t1 + 
11.17202205609706,20,println(c + 
8.587059555375902,10,out.print(t1 
11.17202205609706,20,n(num + 
8.587059555375902,10,orignalInteger and reversedInteger 
11.17202205609706,20,println(num + 
11.17202205609706,20,c + " 
8.587059555375902,10,public class Palindrome 
8.587059555375902,10,t1 + " 
12.68412818478932,30," is a 
11.17202205609706,20,n(c + 
8.587059555375902,10,if orignalInteger and 
8.587059555375902,10,c class LeapYear 
8.587059555375902,10,is stored in 
11.17202205609706,20,n(year + 
17.174119110751803,100,c static void 
11.17202205609706,20,println(year + 
11.17202205609706,20,originalInteger + " 
12.68412818478932,30,1; i <=
8.587059555375902,10,2; i <=
9.325831187903477,10,import java.util.Scanner
9.325831187903477,10,new Scanner(System.in
9.325831187903477,10,integer is stored in
9.325831187903477,10,System.out.println("Enter First Number: "
9.325831187903477,10,System.out.println("Enter Second Number: "
9.325831187903477,10,System.out.println("Sum of these numbers: " 
9.325831187903477,10,c >= 'a'
9.325831187903477,10,not an alphabet."
12.133186109961082,20,n(year + "
9.325831187903477,10,System.out.print("
9.325831187903477,10,println("Printing from inside myMethod()!"
12.133186109961082,20,println(num + "
17.747895954076288,80,System.out.println("
9.325831187903477,10,out.println("About to encounter a method."
12.133186109961082,20,println(year + "
9.325831187903477,10,int(t1 + "
12.133186109961082,20,a leap year."
12.133186109961082,20,println(c + "
12.133186109961082,20,a prime number."
12.133186109961082,20,n(c + "
9.325831187903477,10,System.out.printf("
12.133186109961082,20,n(num + "
9.325831187903477,10,n("Printing from inside myMethod()!"
9.325831187903477,10,is an alphabet."
9.325831187903477,10,print(t1 + "
9.325831187903477,10,is a palindrome."
9.325831187903477,10,out.println("Method was executed successfully!"
12.133186109961082,20,println(originalInteger + "
12.133186109961082,20,n(originalInteger + "
9.325831187903477,10,not a palindrome."
9.325831187903477,10,out.println("Hello World!"
9.325831187903477,10,new Scanner(System.i
9.325831187903477,10,integer is stored i
9.325831187903477,10,< 10; i
12.133186109961082,20,c + " i
12.133186109961082,20,num + " i
12.133186109961082,20,year + " i
9.325831187903477,10,hence the year i
12.133186109961082,20,originalInteger + " i
9.325831187903477,10,System.out.printf("Factorial of 
9.325831187903477,10,System.out.print("First " 
9.325831187903477,10,System.out.println("Hello World
9.325831187903477,10," is a leap
9.325831187903477,10,is not a leap
9.325831187903477,10,year is a leap
12.133186109961082,20,System.out.println("Sum 
9.325831187903477,10,System.out.println("About to encounter a method
9.325831187903477,10,System.out.println("Method was executed successfully
9.325831187903477,10,System.out.println("Printing from inside myMethod
18.651662375806954,100,c static void main
18.651662375806954,100,public static void main
18.651662375806954,100,c void main(String[]
18.651662375806954,100,static void main(String[]
18.651662375806954,100,void main(String[] args
18.651662375806954,100,d main(String[] args
12.133186109961082,20,System.out.println(c
9.325831187903477,10,') || (c
9.325831187903477,10,'z') || (c
9.325831187903477,10,'A' && c <
9.325831187903477,10,'a' && c <
12.133186109961082,20,' && c <
12.133186109961082,20,c + " is
12.133186109961082,20,num + " is
12.133186109961082,20,year + " is
9.325831187903477,10,hence the year is
12.133186109961082,20,originalInteger + " is
9.325831187903477,10,palindrome if orignalInteger an
9.325831187903477,10," is not an
9.325831187903477,10,is not an alphabet
9.325831187903477,10," is an alphabet
9.325831187903477,10,n for nonprime num
12.133186109961082,20,System.out.println(num
9.325831187903477,10,is a prime num
9.325831187903477,10,not a prime num
9.325831187903477,10,condition for nonprime num
9.325831187903477,10,if orignalInteger and
9.325831187903477,10,out.printf("Factorial of %d
9.325831187903477,10,n for nonprime n
12.133186109961082,20,System.out.println(n
9.325831187903477,10,is a prime n
9.325831187903477,10,not a prime n
9.325831187903477,10,condition for nonprime n
9.325831187903477,10,System.out.print(t1
9.325831187903477,10,year % 100
9.325831187903477,10,num  /= 10
9.325831187903477,10,divisible by 400
9.325831187903477,10,year % 400
9.325831187903477,10,n + " terms:
12.133186109961082,20,System.out.println(year
12.133186109961082,20,is a leap year
9.325831187903477,10,not a leap year
9.325831187903477,10,is divisible by 4
9.325831187903477,10,year is divisible by
9.325831187903477,10,is divisible by 400
9.325831187903477,10,is not an a
18.651662375806954,100,void main(String[] a
9.325831187903477,10,orignalInteger and reversedInteger a
9.325831187903477,10,palindrome if orignalInteger a
18.651662375806954,100,d main(String[] a
9.325831187903477,10," is an a
14.940541032018682,40," is not a
9.325831187903477,10,the year is a
9.325831187903477,10,if orignalInteger and reversedInteger
9.325831187903477,10,orignalInteger and reversedInteger
12.133186109961082,20,System.out.println(originalInteger
9.325831187903477,10,if orignalInteger and reversed
9.325831187903477,10,orignalInteger and reversed
9.325831187903477,10,d integer is stored
9.325831187903477,10,reversed integer is stored
9.325831187903477,10,is stored in variable
9.325831187903477,10," is a palindrome
9.325831187903477,10,is not a palindrome
9.325831187903477,10,palindrome if orignalInteger and
9.325831187903477,10,orignalInteger and reversedInteger are
9.325831187903477,10,d reversedInteger are equal
9.325831187903477,10,and reversedInteger are equal
9.325831187903477,10,n for nonprime number
9.325831187903477,10,is a prime number
9.325831187903477,10,not a prime number
9.325831187903477,10,condition for nonprime number
9.325831187903477,10," is a prime
9.325831187903477,10,is not a prime
9.325831187903477,10,private static void myMethod
9.325831187903477,10,is an alphabet.
9.325831187903477,10,not an alphabet.
9.325831187903477,10," terms: ");
9.325831187903477,10,n("About to encounter a method.");
9.325831187903477,10," + ");
9.325831187903477,10,myMethod()!");
12.133186109961082,20,prime number.");
9.325831187903477,10,println("Method was executed successfully!");
9.325831187903477,10,n("Method was executed successfully!");
9.325831187903477,10,num  /= 10;
9.325831187903477,10,println("Hello World!");
9.325831187903477,10,i < 10;
9.325831187903477,10,println("About to encounter a method.");
12.133186109961082,20,an alphabet.");
9.325831187903477,10,1 + num2;
9.325831187903477,10,out.println("Enter First Number: ");
12.133186109961082,20,leap year.");
12.133186109961082,20,n alphabet.");
12.133186109961082,20,a palindrome.");
9.325831187903477,10,d()!");
9.325831187903477,10,Scanner(System.in);
9.325831187903477,10,"Printing from inside myMethod()!");
9.325831187903477,10,a method.");
9.325831187903477,10,num % 10;
9.325831187903477,10,num1 + num2;
9.325831187903477,10,out.println("Enter Second Number: ");
12.133186109961082,20," + sum);
9.325831187903477,10,n("Hello World!");
9.325831187903477,10,2; ++i)
9.325831187903477,10,10; i++)
12.133186109961082,20,num; ++i)
9.325831187903477,10,0; i++)
9.325831187903477,10,static void myMethod()
9.325831187903477,10,n; ++i)
9.325831187903477,10,Scanner(System.in)
9.325831187903477,10,c void myMethod()
9.325831187903477,10,c <= 'Z'))
9.325831187903477,10,out.println("Printing from inside myMethod()
9.325831187903477,10,println("Sum of these numbers: " + sum)
9.325831187903477,10,n("Sum of these numbers: " + sum)
9.325831187903477,10,c class file1 {
9.325831187903477,10,c class Prime {
9.325831187903477,10,public class SumNatural {
9.325831187903477,10,c class AddTwoNumbers2 {
9.325831187903477,10,c class Alphabet {
9.325831187903477,10,c class SumNatural {
9.325831187903477,10,public class Alphabet {
9.325831187903477,10,public class AddTwoNumbers2 {
9.325831187903477,10,public class Fibonacci {
9.325831187903477,10,public class Palindrome {
9.325831187903477,10,public class Factorial {
9.325831187903477,10,public class LeapYear {
9.325831187903477,10,public class file1 {
9.325831187903477,10,if (leap) {
9.325831187903477,10,c class Factorial {
9.325831187903477,10,public class Prime {
9.325831187903477,10,c class LeapYear {
9.325831187903477,10,c class Palindrome {
9.325831187903477,10,c class Fibonacci {
12.133186109961082,20,out.println(c +
9.325831187903477,10,reversedInteger * 10 +
12.133186109961082,20,out.println(year +
9.325831187903477,10," + n +
9.325831187903477,10,< 10; i+
9.325831187903477,10,out.print(t1 +
12.133186109961082,20,out.println(num +
9.325831187903477,10,t1 + " +
9.325831187903477,10,1 + " +
12.133186109961082,20,out.println(originalInteger +
9.325831187903477,10,< 10; i++
12.133186109961082,20,if ( year %
9.325831187903477,10,i <= num /
9.325831187903477,10,import java.util.*
9.325831187903477,10,num % i ==
9.325831187903477,10,year % 400 ==
9.325831187903477,10,year % 4 ==
9.325831187903477,10,year % 100 ==
9.325831187903477,10,c >= 'A' &&
9.325831187903477,10,c >= 'a' &&
9.325831187903477,10,c >= 'A' &
9.325831187903477,10,c >= 'a' &
9.325831187903477,10,while ( num !
9.325831187903477,10,'a' && c 
9.325831187903477,10,originalInteger == reversedInteger) 
9.325831187903477,10," is an 
9.325831187903477,10,if (num % 
9.325831187903477,10,i <= n; 
9.325831187903477,10,if (originalInteger == 
13.775383465579743,30,1; i <= 
9.325831187903477,10,10; i++) 
9.325831187903477,10,i == 0) 
9.325831187903477,10,year % 100 
9.325831187903477,10,if (year % 
14.940541032018682,40,for (int i 
9.325831187903477,10,2; ++i) 
9.325831187903477,10,'A' && c 
9.325831187903477,10,if ( (c 
9.325831187903477,10,100 == 0) 
9.325831187903477,10,out.printf("Factorial 
9.325831187903477,10,"First " + n + 
9.325831187903477,10,print("First " + n 
12.133186109961082,20,' && c 
9.325831187903477,10,out.println("Sum of these numbers: " + 
9.325831187903477,10,if (!flag) 
9.325831187903477,10,is not an 
9.325831187903477,10,c <= 'z') 
9.325831187903477,10,4 == 0) 
9.325831187903477,10,0; i++) 
9.325831187903477,10,n; ++i) 
9.325831187903477,10,0; i < 
9.325831187903477,10,out.print("First " + 
9.325831187903477,10,2; i <= 
9.325831187903477,10,reversedInteger * 10 
9.325831187903477,10,orignalInteger and reversedInteger 
9.325831187903477,10,int("First " + n 
12.133186109961082,20,0 == 0) 
12.133186109961082,20,i <= num; 
9.325831187903477,10,i < 10; 
9.325831187903477,10,400 == 0) 
12.133186109961082,20,num; ++i) 
9.325831187903477,10,if orignalInteger and 
9.325831187903477,10,num / 2; 
9.325831187903477,10,is stored in 
9.325831187903477,10,'A' && c <=
9.325831187903477,10,'a' && c <=
12.133186109961082,20,' && c <=
9.965784284662087,10,not an alphabet."
9.965784284662087,10,"First " + n + "
9.965784284662087,10,is an alphabet."
9.965784284662087,10,if (num % i
9.965784284662087,10,i < 10; i
9.965784284662087,10,out.println("Sum of these numbers: " + sum
9.965784284662087,10,if ( (c >
9.965784284662087,10,'A' && c <
9.965784284662087,10,'a' && c <
12.965784284662089,20,' && c <
9.965784284662087,10,is not an alphabet
9.965784284662087,10," is an alphabet
9.965784284662087,10,System.out.printf("Factorial
12.965784284662089,20,1; i <= num
9.965784284662087,10,2; i <= num
9.965784284662087,10,0; i < 10
9.965784284662087,10,0; i < 1
9.965784284662087,10,palindrome if orignalInteger and
14.720671786825555,30,1; i <= n
9.965784284662087,10,2; i <= n
9.965784284662087,10,integer is stored in
9.965784284662087,10,new Scanner(System.in
9.965784284662087,10,palindrome if orignalInteger an
9.965784284662087,10,out.print("First " + n
9.965784284662087,10," is not an
9.965784284662087,10,is divisible by 40
9.965784284662087,10,if (year % 4
9.965784284662087,10,is not an a
9.965784284662087,10,orignalInteger and reversedInteger a
9.965784284662087,10," is an a
9.965784284662087,10,if orignalInteger and reversedInteger
9.965784284662087,10,if (originalInteger == reversedInteger
9.965784284662087,10,if orignalInteger and reversed
9.965784284662087,10,if (originalInteger == reversed
9.965784284662087,10,is stored in variable
9.965784284662087,10,orignalInteger and reversedInteger are
9.965784284662087,10,System.out.println("About to encounter a method.
9.965784284662087,10,is not a palindrome.
9.965784284662087,10," is a palindrome.
9.965784284662087,10,not a leap year.
9.965784284662087,10,is not an alphabet.
9.965784284662087,10,is a leap year.
9.965784284662087,10,not a prime number.
9.965784284662087,10,is a prime number.
9.965784284662087,10," is an alphabet.
9.965784284662087,10,import java.util.Scanner;
9.965784284662087,10,num  /= 10;
9.965784284662087,10,n("Sum of these numbers: " + sum);
9.965784284662087,10,println("Sum of these numbers: " + sum);
9.965784284662087,10,import java.util.*;
9.965784284662087,10,Scanner(System.in);
19.931568569324174,100,c static void main(
9.965784284662087,10,System.out.println("Printing from inside myMethod(
19.931568569324174,100,public static void main(
9.965784284662087,10,private static void myMethod(
9.965784284662087,10,n("Printing from inside myMethod()!")
9.965784284662087,10,out.println("Method was executed successfully!")
9.965784284662087,10,System.out.println("Enter First Number: ")
9.965784284662087,10,is an alphabet.")
9.965784284662087,10,not an alphabet.")
19.931568569324174,100,void main(String[] args)
9.965784284662087,10,out.println("About to encounter a method.")
19.931568569324174,100,d main(String[] args)
9.965784284662087,10,println("Printing from inside myMethod()!")
9.965784284662087,10,< 10; i++)
9.965784284662087,10,out.println("Hello World!")
9.965784284662087,10,is a palindrome.")
9.965784284662087,10,not a palindrome.")
12.965784284662089,20,a leap year.")
9.965784284662087,10,System.out.println("Enter Second Number: ")
12.965784284662089,20,a prime number.")
9.965784284662087,10,new Scanner(System.in)
9.965784284662087,10,4 == 0) {
12.965784284662089,20,0 == 0) {
12.965784284662089,20,num; ++i) {
9.965784284662087,10,100 == 0) {
9.965784284662087,10,2; ++i) {
9.965784284662087,10,n; ++i) {
9.965784284662087,10,originalInteger == reversedInteger) {
9.965784284662087,10,400 == 0) {
9.965784284662087,10,0; i++) {
9.965784284662087,10,10; i++) {
9.965784284662087,10,if (!flag) {
9.965784284662087,10,i == 0) {
9.965784284662087,10,< 10; i++
9.965784284662087,10,System.out.println("Sum of these numbers: " +
9.965784284662087,10,reversedInteger * 10 +
12.965784284662089,20,i <= num; +
9.965784284662087,10,num / 2; +
9.965784284662087,10,System.out.print("First " +
9.965784284662087,10,< 10; i+
9.965784284662087,10,i <= n; +
9.965784284662087,10,int("First " + n +
9.965784284662087,10,print("First " + n +
12.965784284662089,20,i <= num; ++
9.965784284662087,10,num / 2; ++
9.965784284662087,10,< 10; i++
9.965784284662087,10,i <= n; ++
9.965784284662087,10,System.out.printf("Factorial of %
9.965784284662087,10,year % 100 ==
9.965784284662087,10,c >= 'A' &&
9.965784284662087,10,c >= 'a' &&
9.965784284662087,10,c <= 'z') ||
9.965784284662087,10,out.println("Printing from inside myMethod()!
9.965784284662087,10,System.out.println("Hello World!
9.965784284662087,10,System.out.println("Method was executed successfully!
9.965784284662087,10,hence the year is 
12.965784284662089,20,println(year + " 
9.965784284662087,10,year is a leap 
9.965784284662087,10,'A' && c <= 
12.965784284662089,20,System.out.println(originalInteger 
12.965784284662089,20,n(num + " 
9.965784284662087,10,print(t1 + " 
9.965784284662087,10,integer is stored in 
12.965784284662089,20,out.println(num + 
12.965784284662089,20,println(num + " 
19.931568569324174,100,c void main(String[] 
9.965784284662087,10,num % i == 
12.965784284662089,20,n(c + " 
12.965784284662089,20,if ( year % 
9.965784284662087,10,year % 400 
9.965784284662087,10,year % 400 == 
9.965784284662087,10,int(t1 + " 
9.965784284662087,10,year % 4 == 
9.965784284662087,10,10; i++) 
9.965784284662087,10,c >= 'A' && 
9.965784284662087,10,reversedInteger * 10 + 
9.965784284662087,10,1 + " + 
9.965784284662087,10,year % 100 
9.965784284662087,10,year % 100 == 
9.965784284662087,10," is a prime 
9.965784284662087,10,out.print(t1 + 
9.965784284662087,10,n + " terms: 
9.965784284662087,10,out.printf("Factorial of %d 
9.965784284662087,10,') || (c 
12.965784284662089,20,println(c + " 
9.965784284662087,10,System.out.print(t1 
9.965784284662087,10,2; ++i) 
9.965784284662087,10,is not a leap 
12.965784284662089,20,originalInteger + " is 
9.965784284662087,10,c <= 'Z')) 
19.931568569324174,100,static void main(String[] 
9.965784284662087,10,'a' && c <= 
12.965784284662089,20,out.println(originalInteger + 
9.965784284662087,10,c >= 'a' 
12.965784284662089,20,n(year + " 
9.965784284662087,10,c >= 'a' && 
12.965784284662089,20,println(originalInteger + " 
9.965784284662087,10,reversed integer is stored 
9.965784284662087,10,'z') || (c 
9.965784284662087,10,palindrome if orignalInteger and 
9.965784284662087,10," is a leap 
12.965784284662089,20,out.println(year + 
12.965784284662089,20,System.out.println(year 
12.965784284662089,20,c + " is 
9.965784284662087,10,if orignalInteger and reversedInteger 
9.965784284662087,10,the year is a 
12.965784284662089,20,num + " is 
9.965784284662087,10,is not a prime 
12.965784284662089,20,year + " is 
12.965784284662089,20,' && c <= 
9.965784284662087,10," is not an 
12.965784284662089,20,n(originalInteger + " 
12.965784284662089,20,System.out.println(num 
12.965784284662089,20,out.println(c + 
9.965784284662087,10,0; i++) 
12.965784284662089,20,System.out.println(c 
9.965784284662087,10,n; ++i) 
9.965784284662087,10,d integer is stored 
9.965784284662087,10," + n + 
9.965784284662087,10,i <= num / 
9.965784284662087,10,orignalInteger and reversedInteger 
9.965784284662087,10,year is divisible by 
9.965784284662087,10,t1 + " + 
9.965784284662087,10,i < 10; 
9.965784284662087,10,orignalInteger and reversedInteger are 
12.965784284662089,20,num; ++i) 
9.965784284662087,10,if orignalInteger and 
14.720671786825555,30," is not a 
9.965784284662087,10,'A' && c <=
9.965784284662087,10,'a' && c <=
12.965784284662089,20,' && c <=
9.965784284662087,10,if ( (c >=
10.530262920977078,10,d integer is stored in
10.530262920977078,10,reversed integer is stored in
13.700187922419392,20,' && c <= '
10.530262920977078,10,'a' && c <= '
10.530262920977078,10,'A' && c <= '
10.530262920977078,10,System.out.println("Hello World!"
13.700187922419392,20,out.println(num + "
10.530262920977078,10," is an alphabet."
10.530262920977078,10,not a leap year."
10.530262920977078,10,t1 + " + "
13.700187922419392,20,out.println(year + "
10.530262920977078,10,System.out.println("Method was executed successfully!"
10.530262920977078,10,is a prime number."
10.530262920977078,10,is a leap year."
10.530262920977078,10,out.print(t1 + "
10.530262920977078,10," is a palindrome."
10.530262920977078,10,not a prime number."
13.700187922419392,20,out.println(c + "
10.530262920977078,10,is not a palindrome."
10.530262920977078,10,1 + " + "
10.530262920977078,10,out.println("Printing from inside myMethod()!"
10.530262920977078,10," + n + "
13.700187922419392,20,out.println(originalInteger + "
10.530262920977078,10,System.out.println("About to encounter a method."
10.530262920977078,10,n + " terms: "
10.530262920977078,10,is not an alphabet."
13.700187922419392,20,println(num + " i
10.530262920977078,10,num / 2; ++i
10.530262920977078,10,d integer is stored i
13.700187922419392,20,println(year + " i
13.700187922419392,20,n(num + " i
10.530262920977078,10,i <= n; ++i
13.700187922419392,20,println(c + " i
13.700187922419392,20,n(c + " i
13.700187922419392,20,n(year + " i
10.530262920977078,10,reversed integer is stored i
13.700187922419392,20,i <= num; ++i
10.530262920977078,10,i < 10; i
13.700187922419392,20,n(originalInteger + " i
13.700187922419392,20,println(originalInteger + " i
10.530262920977078,10," is not a leap
10.530262920977078,10,the year is a leap
21.060525841954156,100,c static void main(String[]
21.060525841954156,100,public static void main(String[]
21.060525841954156,100,c void main(String[] args
21.060525841954156,100,static void main(String[] args
10.530262920977078,10,c >= 'A' && c
10.530262920977078,10,c >= 'a' && c
10.530262920977078,10,') || (c >
10.530262920977078,10,'z') || (c >
10.530262920977078,10,' && c <= 'z'
10.530262920977078,10,'a' && c <= 'z'
10.530262920977078,10,' && c <= 'Z'
10.530262920977078,10,'A' && c <= 'Z'
13.700187922419392,20,println(num + " is
13.700187922419392,20,println(year + " is
13.700187922419392,20,n(num + " is
13.700187922419392,20,println(c + " is
13.700187922419392,20,n(c + " is
13.700187922419392,20,n(year + " is
13.700187922419392,20,n(originalInteger + " is
13.700187922419392,20,println(originalInteger + " is
10.530262920977078,10,c + " is an
10.530262920977078,10," is not an alphabet
10.530262920977078,10,num + " is not
10.530262920977078,10,c + " is not
10.530262920977078,10,originalInteger + " is not
10.530262920977078,10,year + " is not
10.530262920977078,10,is not a prime num
10.530262920977078,10," is a prime num
10.530262920977078,10,if ( year % 10
10.530262920977078,10,if ( year % 1
10.530262920977078,10,System.out.printf("Factorial of %d
10.530262920977078,10,palindrome if orignalInteger and
10.530262920977078,10,is not a prime n
10.530262920977078,10,num + " is n
10.530262920977078,10,c + " is n
10.530262920977078,10,originalInteger + " is n
10.530262920977078,10,year + " is n
10.530262920977078,10," is a prime n
10.530262920977078,10,year % 100 == 0
10.530262920977078,10,num % i == 0
10.530262920977078,10,year % 400 == 0
10.530262920977078,10,is divisible by 400
10.530262920977078,10,0; i < 10
10.530262920977078,10,year % 4 == 0
10.530262920977078,10," is a leap year
10.530262920977078,10,year is a leap year
10.530262920977078,10,is not a leap year
10.530262920977078,10,if ( year % 4
10.530262920977078,10,year is divisible by 4
10.530262920977078,10,if ( year % 100
10.530262920977078,10,if ( year % 400
10.530262920977078,10,year is divisible by 400
10.530262920977078,10,if orignalInteger and reversedInteger a
10.530262920977078,10,num + " is a
10.530262920977078,10,orignalInteger and reversedInteger a
21.060525841954156,100,c void main(String[] a
21.060525841954156,100,static void main(String[] a
10.530262920977078,10," is not an a
10.530262920977078,10,c + " is a
10.530262920977078,10,originalInteger + " is a
10.530262920977078,10,hence the year is a
10.530262920977078,10,year + " is a
10.530262920977078,10,if orignalInteger and reversedInteger
10.530262920977078,10,palindrome if orignalInteger and reversedInteger
10.530262920977078,10,reversedInteger * 10 + remainder
10.530262920977078,10,if orignalInteger and reversed
10.530262920977078,10,palindrome if orignalInteger and reversed
10.530262920977078,10,integer is stored in variable
10.530262920977078,10," is not a palindrome
10.530262920977078,10,if orignalInteger and reversedInteger are
10.530262920977078,10,orignalInteger and reversedInteger are
10.530262920977078,10,orignalInteger and reversedInteger are equal
10.530262920977078,10,i <= num / 2
10.530262920977078,10,is not a prime number
10.530262920977078,10," is a prime number
10.530262920977078,10," is not a prime
10.530262920977078,10," is an alphabet.
10.530262920977078,10,is not an alphabet.
10.530262920977078,10,0; i < 10;
13.700187922419392,20,1; i <= num;
10.530262920977078,10,out.println("Method was executed successfully!");
13.700187922419392,20,a leap year.");
10.530262920977078,10,is a palindrome.");
10.530262920977078,10,println("Printing from inside myMethod()!");
10.530262920977078,10,new Scanner(System.in);
10.530262920977078,10,1; i <= n;
10.530262920977078,10,out.println("Hello World!");
10.530262920977078,10,System.out.println("Enter Second Number: ");
10.530262920977078,10,is an alphabet.");
13.700187922419392,20,a prime number.");
10.530262920977078,10,not an alphabet.");
10.530262920977078,10,n("Printing from inside myMethod()!");
10.530262920977078,10,not a palindrome.");
10.530262920977078,10,out.println("About to encounter a method.");
10.530262920977078,10,System.out.println("Enter First Number: ");
10.530262920977078,10,is an alphabet.")
10.530262920977078,10,not an alphabet.")
10.530262920977078,10,private static void myMethod()
10.530262920977078,10,out.println("Sum of these numbers: " + sum)
10.530262920977078,10,new Scanner(System.in)
10.530262920977078,10,System.out.println("Printing from inside myMethod()
10.530262920977078,10,if (originalInteger == reversedInteger)
10.530262920977078,10,< 10; i++)
10.530262920977078,10,2; ++i) {
10.530262920977078,10,n; ++i) {
10.530262920977078,10,c <= 'Z')) {
13.700187922419392,20,num; ++i) {
10.530262920977078,10,0; i++) {
10.530262920977078,10,10; i++) {
10.530262920977078,10,< 10; i++
13.700187922419392,20,i <= num; ++
10.530262920977078,10,print(t1 + " +
13.700187922419392,20,System.out.println(originalInteger +
10.530262920977078,10,i < 10; i+
10.530262920977078,10,int(t1 + " +
13.700187922419392,20,System.out.println(num +
10.530262920977078,10,System.out.print(t1 +
10.530262920977078,10,num / 2; ++
13.700187922419392,20,System.out.println(year +
10.530262920977078,10,i <= n; ++
13.700187922419392,20,System.out.println(c +
10.530262920977078,10,i < 10; i++
10.530262920977078,10,year % 100 ==
10.530262920977078,10,year % 400 ==
10.530262920977078,10,c >= 'a' &&
10.530262920977078,10,c >= 'a' &
10.530262920977078,10,System.out.println("Sum of these numbers: " + 
10.530262920977078,10,c <= 'z') || 
10.530262920977078,10,'A' && c <= 
10.530262920977078,10,int("First " + n + 
10.530262920977078,10,out.print("First " + n 
10.530262920977078,10,if orignalInteger and reversedInteger 
10.530262920977078,10,integer is stored in 
13.700187922419392,20,' && c <= 
10.530262920977078,10," is not an 
10.530262920977078,10,System.out.printf("Factorial 
10.530262920977078,10,< 10; i++) 
10.530262920977078,10,System.out.print("First " + 
10.530262920977078,10,"First " + n + " 
10.530262920977078,10,if (num % i 
10.530262920977078,10,if (year % 4 
10.530262920977078,10,c >= 'A' && 
10.530262920977078,10,reversedInteger * 10 + 
10.530262920977078,10,year % 100 == 
10.530262920977078,10,if ( (c >= 
10.530262920977078,10,print("First " + n + 
10.530262920977078,10,orignalInteger and reversedInteger are 
10.530262920977078,10,'a' && c <= 
10.530262920977078,10,c >= 'a' && 
10.530262920977078,10,2; i <= num 
10.530262920977078,10,palindrome if orignalInteger and 
10.530262920977078,10,') || (c >=
10.530262920977078,10,'z') || (c >=
14.357134362489344,20,' && c <= '
11.03520626760198,10,'a' && c <= '
11.03520626760198,10,if ( (c >= '
11.03520626760198,10,'A' && c <= '
11.03520626760198,10," is an alphabet."
11.03520626760198,10,print("First " + n + "
11.03520626760198,10,int("First " + n + "
11.03520626760198,10,is not an alphabet."
11.03520626760198,10,num / 2; ++i
11.03520626760198,10,i <= n; ++i
14.357134362489344,20,i <= num; ++i
11.03520626760198,10,System.out.println("Sum of these numbers: " + sum
11.03520626760198,10,c >= 'a' && c
11.03520626760198,10,c >= 'A' && c
11.03520626760198,10,if ( (c >= 'a'
11.03520626760198,10,' && c <= 'z'
11.03520626760198,10,'a' && c <= 'z'
11.03520626760198,10,' && c <= 'Z'
11.03520626760198,10,'A' && c <= 'Z'
11.03520626760198,10," is not an alphabet
11.03520626760198,10,reversed integer is stored in
11.03520626760198,10,c + " is an
11.03520626760198,10,System.out.print("First " + n
11.03520626760198,10,d integer is stored in
11.03520626760198,10,if ( year % 100
11.03520626760198,10,year % 100 == 0
11.03520626760198,10,if ( year % 10
11.03520626760198,10,if ( year % 40
11.03520626760198,10,year is divisible by 40
11.03520626760198,10,"First " + n + " terms:
11.03520626760198,10,if orignalInteger and reversedInteger a
11.03520626760198,10," is not an a
11.03520626760198,10,palindrome if orignalInteger and reversedInteger
11.03520626760198,10,reversedInteger * 10 + remainder
11.03520626760198,10,palindrome if orignalInteger and reversed
11.03520626760198,10,integer is stored in variable
11.03520626760198,10,if orignalInteger and reversedInteger are
11.03520626760198,10,orignalInteger and reversedInteger are equal
11.03520626760198,10," is a leap year.
11.03520626760198,10," is not an alphabet.
11.03520626760198,10,is not a leap year.
11.03520626760198,10," is a prime number.
11.03520626760198,10,is not a prime number.
11.03520626760198,10," is not a palindrome.
11.03520626760198,10,0; i < 10;
11.03520626760198,10,new Scanner(System.in);
11.03520626760198,10,reversedInteger * 10 + remainder;
11.03520626760198,10,out.println("Sum of these numbers: " + sum);
11.03520626760198,10,is an alphabet.");
11.03520626760198,10,i <= num / 2;
11.03520626760198,10,not an alphabet.");
11.03520626760198,10,c <= 'z') || (
22.07041253520396,100,c void main(String[] args)
11.03520626760198,10,year % 400 == 0)
11.03520626760198,10,is a prime number.")
11.03520626760198,10," is an alphabet.")
11.03520626760198,10,is a leap year.")
14.357134362489344,20,i <= num; ++i)
11.03520626760198,10,num % i == 0)
11.03520626760198,10,is not an alphabet.")
11.03520626760198,10," is a palindrome.")
11.03520626760198,10,out.println("Printing from inside myMethod()!")
11.03520626760198,10,t1 + " + ")
11.03520626760198,10,< 10; i++)
11.03520626760198,10,i < 10; i++)
11.03520626760198,10,i <= n; ++i)
11.03520626760198,10,year % 100 == 0)
11.03520626760198,10,year % 4 == 0)
11.03520626760198,10,'A' && c <= 'Z')
11.03520626760198,10,'a' && c <= 'z')
11.03520626760198,10,1 + " + ")
11.03520626760198,10,' && c <= 'z')
11.03520626760198,10,num / 2; ++i)
11.03520626760198,10,System.out.println("Method was executed successfully!")
11.03520626760198,10,is not a palindrome.")
11.03520626760198,10,n + " terms: ")
11.03520626760198,10,' && c <= 'Z')
11.03520626760198,10,not a prime number.")
11.03520626760198,10,not a leap year.")
22.07041253520396,100,static void main(String[] args)
11.03520626760198,10,System.out.println("Hello World!")
11.03520626760198,10,System.out.println("About to encounter a method.")
11.03520626760198,10,< 10; i++) {
11.03520626760198,10,i < 10; i+
11.03520626760198,10,out.print("First " + n +
11.03520626760198,10,i < 10; i++
11.03520626760198,10,i < 10; i++
11.03520626760198,10,2; i <= num /
11.03520626760198,10,if (year % 4 ==
11.03520626760198,10,if (num % i ==
11.03520626760198,10,c >= 'a' &&
11.03520626760198,10,System.out.println("Printing from inside myMethod()!
14.357134362489344,20,out.println(year + " 
14.357134362489344,20,println(c + " is 
11.03520626760198,10," + n + " 
11.03520626760198,10," is not a prime 
11.03520626760198,10,print(t1 + " + 
11.03520626760198,10,System.out.printf("Factorial of %d 
11.03520626760198,10,num + " is not 
22.07041253520396,100,public static void main(String[] 
14.357134362489344,20,n(num + " is 
11.03520626760198,10,year % 400 == 
14.357134362489344,20,println(num + " is 
11.03520626760198,10,1; i <= n; 
11.03520626760198,10,reversed integer is stored in 
11.03520626760198,10,hence the year is a 
11.03520626760198,10,the year is a leap 
11.03520626760198,10,year % 100 == 
11.03520626760198,10,int(t1 + " + 
14.357134362489344,20,1; i <= num; 
11.03520626760198,10,0; i < 10; 
14.357134362489344,20,out.println(num + " 
11.03520626760198,10,c + " is an 
14.357134362489344,20,System.out.println(originalInteger + 
11.03520626760198,10,year + " is a 
11.03520626760198,10,c >= 'a' && c 
14.357134362489344,20,n(c + " is 
22.07041253520396,100,c static void main(String[] 
11.03520626760198,10,c >= 'a' && 
11.03520626760198,10,System.out.print(t1 + 
11.03520626760198,10,palindrome if orignalInteger and 
11.03520626760198,10,year + " is not 
14.357134362489344,20,out.println(c + " 
14.357134362489344,20,n(year + " is 
11.03520626760198,10,originalInteger + " is a 
11.03520626760198,10,') || (c >= 
11.03520626760198,10,if orignalInteger and reversedInteger 
14.357134362489344,20,n(originalInteger + " is 
14.357134362489344,20,System.out.println(year + 
11.03520626760198,10,d integer is stored in 
11.03520626760198,10,num + " is a 
11.03520626760198,10,if (originalInteger == reversedInteger) 
11.03520626760198,10,palindrome if orignalInteger and reversedInteger 
14.357134362489344,20,println(year + " is 
11.03520626760198,10,< 10; i++) 
11.03520626760198,10," is not a leap 
11.03520626760198,10,if ( year % 400 
14.357134362489344,20,System.out.println(c + 
11.03520626760198,10,c + " is not 
11.03520626760198,10,c >= 'A' && c 
11.03520626760198,10,if ( year % 100 
14.357134362489344,20,System.out.println(num + 
11.03520626760198,10,orignalInteger and reversedInteger are 
11.03520626760198,10,'z') || (c >= 
11.03520626760198,10,out.print(t1 + " 
14.357134362489344,20,println(originalInteger + " is 
14.357134362489344,20,out.println(originalInteger + " 
11.03520626760198,10,originalInteger + " is not 
11.03520626760198,10,if orignalInteger and reversedInteger are 
11.491983086292903,10,') || (c >= '
11.491983086292903,10,'z') || (c >= '
11.491983086292903,10," is not an alphabet."
11.491983086292903,10,is not a prime number."
11.491983086292903,10," is a leap year."
14.951414704930201,20,System.out.println(c + "
11.491983086292903,10," is not a palindrome."
11.491983086292903,10,System.out.println("Printing from inside myMethod()!"
14.951414704930201,20,System.out.println(num + "
11.491983086292903,10,int(t1 + " + "
11.491983086292903,10,print(t1 + " + "
11.491983086292903,10,System.out.print(t1 + "
14.951414704930201,20,System.out.println(year + "
11.491983086292903,10," is a prime number."
11.491983086292903,10,is not a leap year."
14.951414704930201,20,System.out.println(originalInteger + "
14.951414704930201,20,out.println(originalInteger + " i
14.951414704930201,20,out.println(c + " i
14.951414704930201,20,out.println(year + " i
11.491983086292903,10,0; i < 10; i
14.951414704930201,20,out.println(num + " i
11.491983086292903,10,hence the year is a leap
11.491983086292903,10,year + " is a leap
22.983966172585806,100,public static void main(String[] args
22.983966172585806,100,c static void main(String[] args
11.491983086292903,10,c <= 'z') || (c
11.491983086292903,10,c >= 'a' && c
11.491983086292903,10,c >= 'a' && c <
11.491983086292903,10,c >= 'A' && c <
11.491983086292903,10,') || (c >= 'A'
11.491983086292903,10,'z') || (c >= 'A'
14.951414704930201,20,out.println(originalInteger + " is
14.951414704930201,20,out.println(c + " is
14.951414704930201,20,out.println(year + " is
14.951414704930201,20,out.println(num + " is
11.491983086292903,10,println(c + " is an
11.491983086292903,10,n(c + " is an
11.491983086292903,10,c + " is not an
11.491983086292903,10,c + " is an alphabet
11.491983086292903,10,n(year + " is not
11.491983086292903,10,println(c + " is not
11.491983086292903,10,println(year + " is not
11.491983086292903,10,println(num + " is not
11.491983086292903,10,println(originalInteger + " is not
11.491983086292903,10,n(c + " is not
11.491983086292903,10,n(num + " is not
11.491983086292903,10,n(originalInteger + " is not
11.491983086292903,10," is not a prime num
11.491983086292903,10,n(year + " is n
11.491983086292903,10,println(c + " is n
11.491983086292903,10,println(year + " is n
11.491983086292903,10,println(num + " is n
11.491983086292903,10,println(originalInteger + " is n
11.491983086292903,10,n(c + " is n
11.491983086292903,10," is not a prime n
11.491983086292903,10,n(num + " is n
11.491983086292903,10,n(originalInteger + " is n
11.491983086292903,10,year % 100 == 0
11.491983086292903,10,year % 400 == 0
11.491983086292903,10,if ( year % 100
11.491983086292903,10,if ( year % 400
11.491983086292903,10,year is divisible by 400
11.491983086292903,10," + n + " terms:
11.491983086292903,10,the year is a leap year
11.491983086292903,10," is not a leap year
11.491983086292903,10,if orignalInteger and reversedInteger a
11.491983086292903,10,n(year + " is a
11.491983086292903,10,println(c + " is a
11.491983086292903,10,originalInteger + " is not a
22.983966172585806,100,public static void main(String[] a
11.491983086292903,10,if ( (c >= 'a
11.491983086292903,10,year + " is not a
11.491983086292903,10,println(year + " is a
11.491983086292903,10,palindrome if orignalInteger and reversedInteger a
11.491983086292903,10,println(num + " is a
11.491983086292903,10,num + " is not a
11.491983086292903,10,println(originalInteger + " is a
11.491983086292903,10,n(c + " is a
11.491983086292903,10,c + " is not a
22.983966172585806,100,c static void main(String[] a
11.491983086292903,10,n(num + " is a
11.491983086292903,10,n(originalInteger + " is a
11.491983086292903,10,c + " is an a
11.491983086292903,10,palindrome if orignalInteger and reversedInteger
11.491983086292903,10,palindrome if orignalInteger and reversed
11.491983086292903,10,reversed integer is stored in variable
11.491983086292903,10,d integer is stored in variable
11.491983086292903,10,originalInteger + " is a palindrome
11.491983086292903,10,if orignalInteger and reversedInteger are
11.491983086292903,10,palindrome if orignalInteger and reversedInteger are
11.491983086292903,10,if orignalInteger and reversedInteger are equal
11.491983086292903,10,orignalInteger and reversedInteger are equal
11.491983086292903,10," is not a prime number
11.491983086292903,10,num + " is a prime
11.491983086292903,10," is not an alphabet.
11.491983086292903,10,t1 + " + ");
11.491983086292903,10,not a prime number.");
11.491983086292903,10,System.out.println("Method was executed successfully!");
11.491983086292903,10,System.out.println("Hello World!");
11.491983086292903,10,is a leap year.");
11.491983086292903,10,1 + " + ");
11.491983086292903,10," is an alphabet.");
11.491983086292903,10,not a leap year.");
11.491983086292903,10,out.println("Printing from inside myMethod()!");
11.491983086292903,10,n + " terms: ");
11.491983086292903,10," is a palindrome.");
11.491983086292903,10,System.out.println("About to encounter a method.");
11.491983086292903,10,is not a palindrome.");
11.491983086292903,10,is not an alphabet.");
11.491983086292903,10,is a prime number.");
11.491983086292903,10,reversedInteger * 10 + remainder;
11.491983086292903,10,i <= n; ++i)
11.491983086292903,10,year % 100 == 0)
11.491983086292903,10," is an alphabet.")
11.491983086292903,10,'A' && c <= 'Z')
11.491983086292903,10,System.out.println("Sum of these numbers: " + sum)
11.491983086292903,10,'a' && c <= 'z')
11.491983086292903,10,'A' && c <= 'Z'))
11.491983086292903,10,' && c <= 'z')
11.491983086292903,10,num / 2; ++i)
14.951414704930201,20,i <= num; ++i)
11.491983086292903,10,' && c <= 'Z'))
11.491983086292903,10,' && c <= 'Z')
11.491983086292903,10,is not an alphabet.")
11.491983086292903,10,i < 10; i++)
11.491983086292903,10,if (originalInteger == reversedInteger) {
11.491983086292903,10,< 10; i++) {
11.491983086292903,10,i < 10; i++
11.491983086292903,10,out.print(t1 + " +
14.951414704930201,20,1; i <= num; +
11.491983086292903,10,1; i <= n; +
14.951414704930201,20,1; i <= num; ++
11.491983086292903,10,1; i <= n; ++
11.491983086292903,10,if ( year % 100 ==
11.491983086292903,10,if ( year % 400 ==
11.491983086292903,10,out.print("First " + n + 
14.951414704930201,20,i <= num; ++i) 
11.491983086292903,10,year % 100 == 0) 
11.491983086292903,10,"First " + n + " terms: 
11.491983086292903,10,d integer is stored in 
11.491983086292903,10,palindrome if orignalInteger and reversedInteger 
11.491983086292903,10,year % 400 == 0) 
11.491983086292903,10,< 10; i++) 
11.491983086292903,10,print("First " + n + " 
11.491983086292903,10,if ( (c >= 'a' 
11.491983086292903,10,num % i == 0) 
11.491983086292903,10,reversed integer is stored in 
11.491983086292903,10,int("First " + n + " 
11.491983086292903,10,2; i <= num / 
11.491983086292903,10,num / 2; ++i) 
11.491983086292903,10,0; i < 10; 
11.491983086292903,10,c + " is an 
11.491983086292903,10,c >= 'A' && c 
11.491983086292903,10,if ( year % 100 
11.491983086292903,10,i < 10; i++) 
11.491983086292903,10,c >= 'a' && c 
11.491983086292903,10,i <= num / 2; 
11.491983086292903,10,year % 4 == 0) 
11.491983086292903,10,System.out.print("First " + n 
11.491983086292903,10,c >= 'a' && 
11.491983086292903,10,if (num % i == 
11.491983086292903,10,'a' && c <= 'z') 
11.491983086292903,10,if orignalInteger and reversedInteger are 
11.491983086292903,10,if (year % 4 == 
11.491983086292903,10,' && c <= 'z') 
11.491983086292903,10,i <= n; ++i) 
11.491983086292903,10,c >= 'a' && c <=
11.491983086292903,10,c >= 'A' && c <=
11.908987650263265,10,if ( (c >= 'a'
11.908987650263265,10," is not an alphabet."
11.908987650263265,10,out.print("First " + n + "
11.908987650263265,10,"First " + n + " terms: "
11.908987650263265,10,0; i < 10; i
11.908987650263265,10,1; i <= n; ++i
15.493950150984423,20,1; i <= num; ++i
11.908987650263265,10,c >= 'a' && c
11.908987650263265,10,c >= 'a' && c <
11.908987650263265,10,c >= 'A' && c <
11.908987650263265,10,c + " is an alphabet
11.908987650263265,10,println(c + " is an
11.908987650263265,10,c + " is not an
11.908987650263265,10,n(c + " is an
11.908987650263265,10,if (num % i == 0
11.908987650263265,10,if (year % 4 == 0
11.908987650263265,10,print("First " + n + " terms:
11.908987650263265,10,int("First " + n + " terms:
11.908987650263265,10,palindrome if orignalInteger and reversedInteger a
11.908987650263265,10,c + " is an a
11.908987650263265,10,reversed integer is stored in variable
11.908987650263265,10,d integer is stored in variable
11.908987650263265,10,palindrome if orignalInteger and reversedInteger are
11.908987650263265,10,if orignalInteger and reversedInteger are equal
11.908987650263265,10,2; i <= num / 2
11.908987650263265,10,originalInteger + " is a palindrome.
11.908987650263265,10," is not a prime number.
11.908987650263265,10,c + " is an alphabet.
11.908987650263265,10," is not a leap year.
11.908987650263265,10," is an alphabet.");
11.908987650263265,10,System.out.println("Sum of these numbers: " + sum);
11.908987650263265,10,is not an alphabet.");
11.908987650263265,10,int(t1 + " + ")
11.908987650263265,10,year % 400 == 0)
11.908987650263265,10,System.out.println("Printing from inside myMethod()!")
11.908987650263265,10,year % 100 == 0)
23.81797530052653,100,public static void main(String[] args)
23.81797530052653,100,c static void main(String[] args)
11.908987650263265,10,'A' && c <= 'Z'))
11.908987650263265,10,is not a leap year.")
11.908987650263265,10,is not a prime number.")
11.908987650263265,10,print(t1 + " + ")
11.908987650263265,10," is a leap year.")
11.908987650263265,10," is a prime number.")
11.908987650263265,10,' && c <= 'Z'))
11.908987650263265,10," is not an alphabet.")
11.908987650263265,10," is not a palindrome.")
11.908987650263265,10,i < 10; i++)
11.908987650263265,10,year % 4 == 0) {
11.908987650263265,10,i <= n; ++i) {
11.908987650263265,10,year % 100 == 0) {
11.908987650263265,10,num / 2; ++i) {
11.908987650263265,10,year % 400 == 0) {
11.908987650263265,10,i < 10; i++) {
15.493950150984423,20,i <= num; ++i) {
11.908987650263265,10,num % i == 0) {
11.908987650263265,10,< 10; i++) {
11.908987650263265,10,0; i < 10; i+
11.908987650263265,10,System.out.print("First " + n +
11.908987650263265,10,1; i <= n; ++
15.493950150984423,20,1; i <= num; ++
11.908987650263265,10,i <= num / 2; +
11.908987650263265,10,0; i < 10; i++
11.908987650263265,10,i <= num / 2; ++
11.908987650263265,10,if ( year % 100 ==
11.908987650263265,10,if ( (c >= 'a' &&
11.908987650263265,10,if ( (c >= 'a' &
11.908987650263265,10,' && c <= 'z') ||
11.908987650263265,10,'a' && c <= 'z') ||
15.493950150984423,20,i <= num; ++i) 
11.908987650263265,10,year % 100 == 0) 
15.493950150984423,20,System.out.println(originalInteger + " 
11.908987650263265,10,year + " is a leap 
15.493950150984423,20,System.out.println(num + " 
11.908987650263265,10,'z') || (c >= 'A' 
11.908987650263265,10,n(originalInteger + " is not 
15.493950150984423,20,System.out.println(year + " 
11.908987650263265,10,println(c + " is not 
15.493950150984423,20,System.out.println(c + " 
11.908987650263265,10,c + " is not an 
11.908987650263265,10,n(c + " is an 
11.908987650263265,10,n(num + " is not 
11.908987650263265,10,println(year + " is a 
11.908987650263265,10,if ( year % 100 == 
11.908987650263265,10,c >= 'a' && c <= 
11.908987650263265,10,year + " is not a 
11.908987650263265,10,out.print(t1 + " + 
11.908987650263265,10,palindrome if orignalInteger and reversedInteger 
11.908987650263265,10,println(num + " is not 
11.908987650263265,10,println(originalInteger + " is a 
11.908987650263265,10,if ( year % 400 
15.493950150984423,20,out.println(c + " is 
11.908987650263265,10,println(c + " is an 
11.908987650263265,10,n(c + " is not 
11.908987650263265,10,' && c <= 'Z')) 
11.908987650263265,10,n(year + " is a 
11.908987650263265,10,c >= 'A' && c <= 
11.908987650263265,10,println(num + " is a 
11.908987650263265,10,n(year + " is not 
11.908987650263265,10,c <= 'z') || (c 
11.908987650263265,10," + n + " terms: 
15.493950150984423,20,out.println(year + " is 
11.908987650263265,10,num / 2; ++i) 
11.908987650263265,10,num + " is a prime 
11.908987650263265,10,n(num + " is a 
11.908987650263265,10,hence the year is a leap 
11.908987650263265,10,if ( year % 400 == 
11.908987650263265,10,num + " is not a 
11.908987650263265,10,if ( year % 100 
11.908987650263265,10,println(year + " is not 
11.908987650263265,10,i < 10; i++) 
11.908987650263265,10,'A' && c <= 'Z')) 
11.908987650263265,10,c >= 'a' && c 
11.908987650263265,10,System.out.print(t1 + " 
11.908987650263265,10,println(originalInteger + " is not 
15.493950150984423,20,out.println(originalInteger + " is 
15.493950150984423,20,out.println(num + " is 
11.908987650263265,10,'a' && c <= 'z') 
11.908987650263265,10,if orignalInteger and reversedInteger are 
11.908987650263265,10,originalInteger + " is not a 
11.908987650263265,10,') || (c >= 'A' 
11.908987650263265,10,palindrome if orignalInteger and reversedInteger are 
11.908987650263265,10,' && c <= 'z') 
11.908987650263265,10,i <= n; ++i) 
11.908987650263265,10,n(originalInteger + " is a 
11.908987650263265,10,c >= 'a' && c <=
11.908987650263265,10,c >= 'A' && c <=
12.292594663129966,10,c >= 'A' && c <= '
12.292594663129966,10,c >= 'a' && c <= '
12.292594663129966,10,out.print(t1 + " + "
12.292594663129966,10," is not a leap year."
12.292594663129966,10,c + " is an alphabet."
12.292594663129966,10," is not a prime number."
12.292594663129966,10," + n + " terms: "
12.292594663129966,10,originalInteger + " is a palindrome."
15.993034381271059,20,System.out.println(year + " i
15.993034381271059,20,System.out.println(num + " i
15.993034381271059,20,System.out.println(c + " i
15.993034381271059,20,System.out.println(originalInteger + " i
12.292594663129966,10,1; i <= n; ++i
12.292594663129966,10,i <= num / 2; ++i
15.993034381271059,20,1; i <= num; ++i
12.292594663129966,10,year + " is not a leap
12.292594663129966,10,n(year + " is a leap
12.292594663129966,10,println(year + " is a leap
12.292594663129966,10,c <= 'z') || (c >
12.292594663129966,10,c >= 'a' && c <
12.292594663129966,10,c >= 'a' && c <= 'z'
12.292594663129966,10,c >= 'A' && c <= 'Z'
15.993034381271059,20,System.out.println(year + " is
15.993034381271059,20,System.out.println(num + " is
15.993034381271059,20,System.out.println(c + " is
15.993034381271059,20,System.out.println(originalInteger + " is
12.292594663129966,10,println(c + " is not an
12.292594663129966,10,out.println(c + " is an
12.292594663129966,10,n(c + " is not an
12.292594663129966,10,n(c + " is an alphabet
12.292594663129966,10,println(c + " is an alphabet
12.292594663129966,10,c + " is not an alphabet
12.292594663129966,10,out.println(originalInteger + " is not
12.292594663129966,10,out.println(num + " is not
12.292594663129966,10,out.println(year + " is not
12.292594663129966,10,out.println(c + " is not
12.292594663129966,10,num + " is a prime num
12.292594663129966,10,out.println(originalInteger + " is n
12.292594663129966,10,num + " is a prime n
12.292594663129966,10,out.println(num + " is n
12.292594663129966,10,out.println(year + " is n
12.292594663129966,10,out.println(c + " is n
12.292594663129966,10,if ( year % 100 == 0
12.292594663129966,10,if ( year % 400 == 0
12.292594663129966,10,year + " is a leap year
12.292594663129966,10,hence the year is a leap year
12.292594663129966,10,out.println(originalInteger + " is a
12.292594663129966,10,println(c + " is not a
12.292594663129966,10,out.println(num + " is a
12.292594663129966,10,n(c + " is an a
12.292594663129966,10,n(num + " is not a
12.292594663129966,10,out.println(year + " is a
12.292594663129966,10,palindrome if orignalInteger and reversedInteger a
12.292594663129966,10,println(num + " is not a
12.292594663129966,10,println(originalInteger + " is not a
12.292594663129966,10,println(c + " is an a
12.292594663129966,10,out.println(c + " is a
12.292594663129966,10,n(year + " is not a
12.292594663129966,10,c + " is not an a
12.292594663129966,10,println(year + " is not a
12.292594663129966,10,n(originalInteger + " is not a
12.292594663129966,10,n(c + " is not a
12.292594663129966,10,n(originalInteger + " is a palindrome
12.292594663129966,10,println(originalInteger + " is a palindrome
12.292594663129966,10,originalInteger + " is not a palindrome
12.292594663129966,10,palindrome if orignalInteger and reversedInteger are
12.292594663129966,10,if orignalInteger and reversedInteger are equal
12.292594663129966,10,palindrome if orignalInteger and reversedInteger are equal
12.292594663129966,10,num + " is a prime number
12.292594663129966,10,n(num + " is a prime
12.292594663129966,10,println(num + " is a prime
12.292594663129966,10,num + " is not a prime
12.292594663129966,10,c + " is an alphabet.
12.292594663129966,10,is not a prime number.");
12.292594663129966,10," is not a palindrome.");
12.292594663129966,10,is not a leap year.");
12.292594663129966,10," is a prime number.");
12.292594663129966,10," is a leap year.");
12.292594663129966,10,2; i <= num / 2;
12.292594663129966,10,print(t1 + " + ");
12.292594663129966,10,System.out.println("Printing from inside myMethod()!");
12.292594663129966,10,int(t1 + " + ");
12.292594663129966,10," is not an alphabet.");
12.292594663129966,10,if (num % i == 0)
12.292594663129966,10,0; i < 10; i++)
12.292594663129966,10,if (year % 4 == 0)
12.292594663129966,10," is not an alphabet.")
12.292594663129966,10,"First " + n + " terms: ")
12.292594663129966,10,1; i <= n; ++i)
15.993034381271059,20,1; i <= num; ++i)
12.292594663129966,10,' && c <= 'Z')) {
12.292594663129966,10,i <= n; ++i) {
12.292594663129966,10,year % 100 == 0) {
12.292594663129966,10,num / 2; ++i) {
12.292594663129966,10,'A' && c <= 'Z')) {
12.292594663129966,10,i < 10; i++) {
15.993034381271059,20,i <= num; ++i) {
12.292594663129966,10,0; i < 10; i+
12.292594663129966,10,System.out.print(t1 + " +
12.292594663129966,10,i <= num / 2; ++
12.292594663129966,10,0; i < 10; i++
12.292594663129966,10,0; i < 10; i++
12.292594663129966,10,if ( year % 100 ==
12.292594663129966,10,if ( year % 400 ==
12.292594663129966,10,'z') || (c >= 'A' &&
12.292594663129966,10,') || (c >= 'A' &&
12.292594663129966,10,if ( (c >= 'a' &&
12.292594663129966,10,'z') || (c >= 'A' &
12.292594663129966,10,') || (c >= 'A' &
12.292594663129966,10,' && c <= 'z') ||
12.292594663129966,10,'a' && c <= 'z') ||
12.292594663129966,10,year % 100 == 0) 
12.292594663129966,10,int("First " + n + " terms: 
12.292594663129966,10,if ( (c >= 'a' && 
12.292594663129966,10,c + " is not an 
12.292594663129966,10,System.out.print("First " + n + 
12.292594663129966,10,n(c + " is an 
12.292594663129966,10,if ( year % 100 == 
12.292594663129966,10,c >= 'a' && c <= 
12.292594663129966,10,'a' && c <= 'z') || 
12.292594663129966,10,year % 400 == 0) 
12.292594663129966,10,println(c + " is an 
12.292594663129966,10,' && c <= 'Z')) 
12.292594663129966,10,if ( (c >= 'a' 
12.292594663129966,10,c >= 'A' && c <= 
12.292594663129966,10,print("First " + n + " terms: 
12.292594663129966,10,' && c <= 'z') || 
12.292594663129966,10,i < 10; i++) 
12.292594663129966,10,'A' && c <= 'Z')) 
12.292594663129966,10,c >= 'a' && c 
12.292594663129966,10,out.print("First " + n + " 
12.292594663129966,10,palindrome if orignalInteger and reversedInteger are 
12.292594663129966,10,c >= 'a' && c <=
12.292594663129966,10,c <= 'z') || (c >=
12.647759282790837,10,c >= 'A' && c <= '
12.647759282790837,10,c >= 'a' && c <= '
12.647759282790837,10,print("First " + n + " terms: "
12.647759282790837,10,int("First " + n + " terms: "
12.647759282790837,10,System.out.print("First " + n + "
12.647759282790837,10,c + " is an alphabet."
12.647759282790837,10,i <= num / 2; ++i
12.647759282790837,10,if ( (c >= 'a' && c
12.647759282790837,10,c >= 'a' && c <
12.647759282790837,10,c >= 'a' && c <= 'z'
12.647759282790837,10,c >= 'A' && c <= 'Z'
12.647759282790837,10,n(c + " is an alphabet
12.647759282790837,10,println(c + " is an alphabet
12.647759282790837,10,c + " is not an alphabet
12.647759282790837,10,println(c + " is not an
12.647759282790837,10,out.println(c + " is an
12.647759282790837,10,n(c + " is not an
12.647759282790837,10,if ( year % 100 == 0
12.647759282790837,10,out.print("First " + n + " terms:
12.647759282790837,10,n(c + " is an a
12.647759282790837,10,println(c + " is an a
12.647759282790837,10,c + " is not an a
12.647759282790837,10,palindrome if orignalInteger and reversedInteger are equal
12.647759282790837,10,year + " is a leap year.
12.647759282790837,10,println(originalInteger + " is a palindrome.
12.647759282790837,10,n(c + " is an alphabet.
12.647759282790837,10,originalInteger + " is not a palindrome.
12.647759282790837,10,println(c + " is an alphabet.
12.647759282790837,10,n(originalInteger + " is a palindrome.
12.647759282790837,10,c + " is not an alphabet.
12.647759282790837,10,num + " is a prime number.
12.647759282790837,10,"First " + n + " terms: ");
12.647759282790837,10," is not an alphabet.");
12.647759282790837,10,' && c <= 'z') || (
12.647759282790837,10,'a' && c <= 'z') || (
12.647759282790837,10,out.print(t1 + " + ")
12.647759282790837,10," is not a leap year.")
12.647759282790837,10,originalInteger + " is a palindrome.")
12.647759282790837,10,i <= num / 2; ++i)
12.647759282790837,10,0; i < 10; i++)
12.647759282790837,10,c >= 'a' && c <= 'z')
12.647759282790837,10," is not a prime number.")
12.647759282790837,10,if ( year % 400 == 0)
12.647759282790837,10,if ( year % 100 == 0)
12.647759282790837,10,c >= 'A' && c <= 'Z')
12.647759282790837,10,c + " is an alphabet.")
12.647759282790837,10,1; i <= n; ++i)
12.647759282790837,10," + n + " terms: ")
16.455114204848442,20,1; i <= num; ++i)
12.647759282790837,10,' && c <= 'Z')) {
12.647759282790837,10,year % 100 == 0) {
12.647759282790837,10,'A' && c <= 'Z')) {
12.647759282790837,10,year % 400 == 0) {
12.647759282790837,10,i < 10; i++) {
12.647759282790837,10,0; i < 10; i++
12.647759282790837,10,if ( (c >= 'a' &&
12.647759282790837,10,'z') || (c >= 'A' &&
12.647759282790837,10,') || (c >= 'A' &&
12.647759282790837,10,if ( (c >= 'a' &
12.647759282790837,10,println(year + " is a leap 
12.647759282790837,10,num + " is not a prime 
12.647759282790837,10,2; i <= num / 2; 
16.455114204848442,20,System.out.println(year + " is 
16.455114204848442,20,1; i <= num; ++i) 
12.647759282790837,10,if ( (c >= 'a' && 
12.647759282790837,10,'z') || (c >= 'A' && 
16.455114204848442,20,System.out.println(c + " is 
12.647759282790837,10,out.println(originalInteger + " is not 
12.647759282790837,10,println(num + " is not a 
12.647759282790837,10,if ( year % 100 == 
12.647759282790837,10,println(c + " is not an 
12.647759282790837,10,c >= 'a' && c <= 
12.647759282790837,10,if (year % 4 == 0) 
12.647759282790837,10,'a' && c <= 'z') || 
12.647759282790837,10,n(num + " is not a 
12.647759282790837,10,if (num % i == 0) 
12.647759282790837,10,System.out.print(t1 + " + 
12.647759282790837,10,0; i < 10; i++) 
12.647759282790837,10,n(year + " is not a 
12.647759282790837,10,n(num + " is a prime 
12.647759282790837,10,c <= 'z') || (c >= 
12.647759282790837,10,n(c + " is not an 
12.647759282790837,10,println(originalInteger + " is not a 
12.647759282790837,10,out.println(year + " is a 
12.647759282790837,10,println(year + " is not a 
12.647759282790837,10,year + " is not a leap 
12.647759282790837,10,if ( year % 400 == 
16.455114204848442,20,System.out.println(num + " is 
12.647759282790837,10,out.println(originalInteger + " is a 
12.647759282790837,10,out.println(num + " is not 
12.647759282790837,10,1; i <= n; ++i) 
12.647759282790837,10,' && c <= 'z') || 
12.647759282790837,10,out.println(year + " is not 
12.647759282790837,10,out.println(c + " is an 
12.647759282790837,10,') || (c >= 'A' && 
16.455114204848442,20,System.out.println(originalInteger + " is 
12.647759282790837,10,out.println(c + " is not 
12.647759282790837,10,out.println(num + " is a 
12.647759282790837,10,n(originalInteger + " is not a 
12.647759282790837,10,println(num + " is a prime 
12.647759282790837,10,n(year + " is a leap 
12.647759282790837,10,palindrome if orignalInteger and reversedInteger are 
12.647759282790837,10,c >= 'a' && c <=
12.978409633203158,10,c <= 'z') || (c >= '
12.978409633203158,10,c >= 'a' && c <= '
12.978409633203158,10,num + " is a prime number."
12.978409633203158,10,originalInteger + " is not a palindrome."
12.978409633203158,10,year + " is a leap year."
12.978409633203158,10,n(c + " is an alphabet."
12.978409633203158,10,println(c + " is an alphabet."
12.978409633203158,10,c + " is not an alphabet."
12.978409633203158,10,System.out.print(t1 + " + "
12.978409633203158,10,println(originalInteger + " is a palindrome."
12.978409633203158,10,n(originalInteger + " is a palindrome."
12.978409633203158,10,println(year + " is not a leap
12.978409633203158,10,out.println(year + " is a leap
12.978409633203158,10,n(year + " is not a leap
12.978409633203158,10,'a' && c <= 'z') || (c
12.978409633203158,10,if ( (c >= 'a' && c
12.978409633203158,10,'z') || (c >= 'A' && c
12.978409633203158,10,' && c <= 'z') || (c
12.978409633203158,10,') || (c >= 'A' && c
12.978409633203158,10,c >= 'a' && c <= 'z'
12.978409633203158,10,c <= 'z') || (c >= 'A'
12.978409633203158,10,out.println(c + " is not an
12.978409633203158,10,System.out.println(c + " is an
12.978409633203158,10,out.println(c + " is an alphabet
12.978409633203158,10,n(c + " is not an alphabet
12.978409633203158,10,println(c + " is not an alphabet
12.978409633203158,10,System.out.println(year + " is not
12.978409633203158,10,System.out.println(num + " is not
12.978409633203158,10,System.out.println(c + " is not
12.978409633203158,10,System.out.println(originalInteger + " is not
12.978409633203158,10,n(num + " is a prime num
12.978409633203158,10,println(num + " is a prime num
12.978409633203158,10,num + " is not a prime num
12.978409633203158,10,System.out.println(year + " is n
12.978409633203158,10,System.out.println(num + " is n
12.978409633203158,10,n(num + " is a prime n
12.978409633203158,10,println(num + " is a prime n
12.978409633203158,10,num + " is not a prime n
12.978409633203158,10,System.out.println(c + " is n
12.978409633203158,10,System.out.println(originalInteger + " is n
12.978409633203158,10,if ( year % 100 == 0
12.978409633203158,10,if ( year % 400 == 0
12.978409633203158,10,println(year + " is a leap year
12.978409633203158,10,year + " is not a leap year
12.978409633203158,10,n(year + " is a leap year
12.978409633203158,10,System.out.println(year + " is a
12.978409633203158,10,out.println(c + " is an a
12.978409633203158,10,System.out.println(num + " is a
12.978409633203158,10,out.println(num + " is not a
12.978409633203158,10,out.println(originalInteger + " is not a
12.978409633203158,10,n(c + " is not an a
12.978409633203158,10,out.println(c + " is not a
12.978409633203158,10,out.println(year + " is not a
12.978409633203158,10,System.out.println(c + " is a
12.978409633203158,10,println(c + " is not an a
12.978409633203158,10,System.out.println(originalInteger + " is a
12.978409633203158,10,n(originalInteger + " is not a palindrome
12.978409633203158,10,out.println(originalInteger + " is a palindrome
12.978409633203158,10,println(originalInteger + " is not a palindrome
12.978409633203158,10,palindrome if orignalInteger and reversedInteger are equal
12.978409633203158,10,n(num + " is a prime number
12.978409633203158,10,println(num + " is a prime number
12.978409633203158,10,num + " is not a prime number
12.978409633203158,10,n(num + " is not a prime
12.978409633203158,10,println(num + " is not a prime
12.978409633203158,10,out.println(num + " is a prime
12.978409633203158,10,n(c + " is an alphabet.
12.978409633203158,10,println(c + " is an alphabet.
12.978409633203158,10,c + " is not an alphabet.
12.978409633203158,10,out.print(t1 + " + ");
12.978409633203158,10,originalInteger + " is a palindrome.");
12.978409633203158,10," + n + " terms: ");
12.978409633203158,10," is not a leap year.");
12.978409633203158,10,c + " is an alphabet.");
12.978409633203158,10," is not a prime number.");
12.978409633203158,10,' && c <= 'z') || (
12.978409633203158,10,'a' && c <= 'z') || (
12.978409633203158,10,i <= num / 2; ++i)
12.978409633203158,10,0; i < 10; i++)
12.978409633203158,10,c >= 'a' && c <= 'z')
12.978409633203158,10,c >= 'A' && c <= 'Z'))
12.978409633203158,10,if ( year % 100 == 0)
12.978409633203158,10,c >= 'A' && c <= 'Z')
12.978409633203158,10,print("First " + n + " terms: ")
12.978409633203158,10,c + " is an alphabet.")
12.978409633203158,10,int("First " + n + " terms: ")
12.978409633203158,10,1; i <= n; ++i) {
16.88530022881168,20,1; i <= num; ++i) {
12.978409633203158,10,if (num % i == 0) {
12.978409633203158,10,if (year % 4 == 0) {
12.978409633203158,10,0; i < 10; i++) {
12.978409633203158,10,2; i <= num / 2; +
12.978409633203158,10,2; i <= num / 2; ++
12.978409633203158,10,if ( (c >= 'a' &&
12.978409633203158,10,System.out.print("First " + n + " 
12.978409633203158,10,out.print("First " + n + " terms: 
16.88530022881168,20,1; i <= num; ++i) 
12.978409633203158,10,if ( (c >= 'a' && 
12.978409633203158,10,'z') || (c >= 'A' && 
12.978409633203158,10,if ( (c >= 'a' && c 
12.978409633203158,10,c >= 'a' && c <= 'z') 
12.978409633203158,10,println(c + " is not an 
12.978409633203158,10,c >= 'a' && c <= 
12.978409633203158,10,0; i < 10; i++) 
12.978409633203158,10,n(c + " is not an 
12.978409633203158,10,i <= num / 2; ++i) 
12.978409633203158,10,1; i <= n; ++i) 
12.978409633203158,10,if ( year % 100 == 0) 
12.978409633203158,10,out.println(c + " is an 
12.978409633203158,10,') || (c >= 'A' && 
12.978409633203158,10,if ( year % 400 == 0) 
13.287712379549449,10,c >= 'a' && c <= '
13.287712379549449,10,n(c + " is an alphabet."
13.287712379549449,10,println(c + " is an alphabet."
13.287712379549449,10,c + " is not an alphabet."
13.287712379549449,10,out.print("First " + n + " terms: "
13.287712379549449,10,2; i <= num / 2; ++i
13.287712379549449,10,'a' && c <= 'z') || (c
13.287712379549449,10,if ( (c >= 'a' && c
13.287712379549449,10,'z') || (c >= 'A' && c
13.287712379549449,10,' && c <= 'z') || (c
13.287712379549449,10,') || (c >= 'A' && c
13.287712379549449,10,if ( (c >= 'a' && c <
13.287712379549449,10,c >= 'a' && c <= 'z'
13.287712379549449,10,out.println(c + " is an alphabet
13.287712379549449,10,n(c + " is not an alphabet
13.287712379549449,10,println(c + " is not an alphabet
13.287712379549449,10,out.println(c + " is not an
13.287712379549449,10,System.out.println(c + " is an
13.287712379549449,10,System.out.print("First " + n + " terms:
13.287712379549449,10,out.println(c + " is an a
13.287712379549449,10,n(c + " is not an a
13.287712379549449,10,println(c + " is not an a
13.287712379549449,10,n(c + " is not an alphabet.
13.287712379549449,10,println(year + " is a leap year.
13.287712379549449,10,println(originalInteger + " is not a palindrome.
13.287712379549449,10,n(originalInteger + " is not a palindrome.
13.287712379549449,10,out.println(c + " is an alphabet.
13.287712379549449,10,n(num + " is a prime number.
13.287712379549449,10,num + " is not a prime number.
13.287712379549449,10,println(num + " is a prime number.
13.287712379549449,10,println(c + " is not an alphabet.
13.287712379549449,10,year + " is not a leap year.
13.287712379549449,10,n(year + " is a leap year.
13.287712379549449,10,out.println(originalInteger + " is a palindrome.
13.287712379549449,10,print("First " + n + " terms: ");
13.287712379549449,10,c + " is an alphabet.");
13.287712379549449,10,int("First " + n + " terms: ");
13.287712379549449,10,System.out.print(t1 + " + ")
13.287712379549449,10,n(originalInteger + " is a palindrome.")
13.287712379549449,10,n(c + " is an alphabet.")
13.287712379549449,10,println(c + " is an alphabet.")
13.287712379549449,10,println(originalInteger + " is a palindrome.")
13.287712379549449,10,c + " is not an alphabet.")
13.287712379549449,10,c >= 'a' && c <= 'z')
13.287712379549449,10,originalInteger + " is not a palindrome.")
13.287712379549449,10,if ( year % 400 == 0)
13.287712379549449,10,c >= 'A' && c <= 'Z'))
13.287712379549449,10,if ( year % 100 == 0)
13.287712379549449,10,num + " is a prime number.")
13.287712379549449,10,year + " is a leap year.")
13.287712379549449,10,if ( year % 400 == 0) {
13.287712379549449,10,1; i <= n; ++i) {
17.28771237954945,20,1; i <= num; ++i) {
13.287712379549449,10,if ( year % 100 == 0) {
13.287712379549449,10,i <= num / 2; ++i) {
13.287712379549449,10,0; i < 10; i++) {
13.287712379549449,10,2; i <= num / 2; ++
13.287712379549449,10,c >= 'a' && c <= 'z') ||
13.287712379549449,10,out.println(year + " is a leap 
13.287712379549449,10,c <= 'z') || (c >= 'A' 
13.287712379549449,10,System.out.println(originalInteger + " is not 
13.287712379549449,10,println(year + " is not a leap 
13.287712379549449,10,out.println(originalInteger + " is not a 
13.287712379549449,10,') || (c >= 'A' && c 
13.287712379549449,10,if ( (c >= 'a' && 
13.287712379549449,10,out.println(year + " is not a 
13.287712379549449,10,if ( (c >= 'a' && c 
13.287712379549449,10,System.out.println(year + " is not 
13.287712379549449,10,c >= 'a' && c <= 'z') 
13.287712379549449,10,' && c <= 'z') || (c 
13.287712379549449,10,System.out.println(c + " is not 
13.287712379549449,10,System.out.println(year + " is a 
13.287712379549449,10,0; i < 10; i++) 
13.287712379549449,10,c >= 'A' && c <= 'Z')) 
13.287712379549449,10,System.out.println(num + " is a 
13.287712379549449,10,n(year + " is not a leap 
13.287712379549449,10,out.println(num + " is not a 
13.287712379549449,10,'a' && c <= 'z') || (c 
13.287712379549449,10,out.println(num + " is a prime 
13.287712379549449,10,println(num + " is not a prime 
13.287712379549449,10,out.println(c + " is not an 
13.287712379549449,10,i <= num / 2; ++i) 
13.287712379549449,10,'z') || (c >= 'A' && c 
13.287712379549449,10,n(num + " is not a prime 
13.287712379549449,10,System.out.println(c + " is an 
13.287712379549449,10,if ( year % 100 == 0) 
13.287712379549449,10,System.out.println(originalInteger + " is a 
13.287712379549449,10,System.out.println(num + " is not 
13.287712379549449,10,if ( (c >= 'a' && c <=
13.578257649157624,10,n(num + " is a prime number."
13.578257649157624,10,num + " is not a prime number."
13.578257649157624,10,println(c + " is not an alphabet."
13.578257649157624,10,out.println(originalInteger + " is a palindrome."
13.578257649157624,10,println(year + " is a leap year."
13.578257649157624,10,n(originalInteger + " is not a palindrome."
13.578257649157624,10,println(originalInteger + " is not a palindrome."
13.578257649157624,10,println(num + " is a prime number."
13.578257649157624,10,n(year + " is a leap year."
13.578257649157624,10,n(c + " is not an alphabet."
13.578257649157624,10,year + " is not a leap year."
13.578257649157624,10,out.println(c + " is an alphabet."
13.578257649157624,10,2; i <= num / 2; ++i
13.578257649157624,10,out.println(year + " is not a leap
13.578257649157624,10,System.out.println(year + " is a leap
13.578257649157624,10,if ( (c >= 'a' && c
13.578257649157624,10,'a' && c <= 'z') || (c >
13.578257649157624,10,' && c <= 'z') || (c >
13.578257649157624,10,if ( (c >= 'a' && c <
13.578257649157624,10,'z') || (c >= 'A' && c <
13.578257649157624,10,') || (c >= 'A' && c <
13.578257649157624,10,System.out.println(c + " is not an
13.578257649157624,10,System.out.println(c + " is an alphabet
13.578257649157624,10,out.println(c + " is not an alphabet
13.578257649157624,10,n(num + " is not a prime num
13.578257649157624,10,println(num + " is not a prime num
13.578257649157624,10,out.println(num + " is a prime num
13.578257649157624,10,n(num + " is not a prime n
13.578257649157624,10,println(num + " is not a prime n
13.578257649157624,10,out.println(num + " is a prime n
13.578257649157624,10,println(year + " is not a leap year
13.578257649157624,10,out.println(year + " is a leap year
13.578257649157624,10,n(year + " is not a leap year
13.578257649157624,10,System.out.println(c + " is not a
13.578257649157624,10,System.out.println(c + " is an a
13.578257649157624,10,System.out.println(year + " is not a
13.578257649157624,10,System.out.println(originalInteger + " is not a
13.578257649157624,10,out.println(c + " is not an a
13.578257649157624,10,System.out.println(num + " is not a
13.578257649157624,10,out.println(originalInteger + " is not a palindrome
13.578257649157624,10,System.out.println(originalInteger + " is a palindrome
13.578257649157624,10,n(num + " is not a prime number
13.578257649157624,10,println(num + " is not a prime number
13.578257649157624,10,out.println(num + " is a prime number
13.578257649157624,10,out.println(num + " is not a prime
13.578257649157624,10,System.out.println(num + " is a prime
13.578257649157624,10,n(c + " is not an alphabet.
13.578257649157624,10,out.println(c + " is an alphabet.
13.578257649157624,10,println(c + " is not an alphabet.
13.578257649157624,10,year + " is a leap year.");
13.578257649157624,10,n(c + " is an alphabet.");
13.578257649157624,10,n(originalInteger + " is a palindrome.");
13.578257649157624,10,num + " is a prime number.");
13.578257649157624,10,System.out.print(t1 + " + ");
13.578257649157624,10,println(c + " is an alphabet.");
13.578257649157624,10,originalInteger + " is not a palindrome.");
13.578257649157624,10,c + " is not an alphabet.");
13.578257649157624,10,println(originalInteger + " is a palindrome.");
13.578257649157624,10,c >= 'a' && c <= 'z')
13.578257649157624,10,2; i <= num / 2; ++i)
13.578257649157624,10,n(c + " is an alphabet.")
13.578257649157624,10,out.print("First " + n + " terms: ")
13.578257649157624,10,println(c + " is an alphabet.")
13.578257649157624,10,c + " is not an alphabet.")
13.578257649157624,10,if ( year % 100 == 0) {
13.578257649157624,10,c >= 'A' && c <= 'Z')) {
13.578257649157624,10,i <= num / 2; ++i) {
13.578257649157624,10,0; i < 10; i++) {
13.578257649157624,10,c <= 'z') || (c >= 'A' &&
13.578257649157624,10,c <= 'z') || (c >= 'A' &
13.578257649157624,10,c >= 'a' && c <= 'z') ||
13.578257649157624,10,if ( (c >= 'a' && c <= 
13.578257649157624,10,'a' && c <= 'z') || (c 
13.578257649157624,10,out.println(c + " is not an 
13.578257649157624,10,'z') || (c >= 'A' && c 
13.578257649157624,10,') || (c >= 'A' && c 
13.578257649157624,10,System.out.println(c + " is an 
13.578257649157624,10,if ( (c >= 'a' && c 
13.578257649157624,10,if ( year % 100 == 0) 
13.578257649157624,10,System.out.print("First " + n + " terms: 
13.578257649157624,10,c >= 'a' && c <= 'z') 
13.578257649157624,10,' && c <= 'z') || (c 
13.578257649157624,10,c >= 'A' && c <= 'Z')) 
13.578257649157624,10,c >= 'a' && c <= 'z') || 
13.578257649157624,10,if ( year % 400 == 0) 
13.578257649157624,10,if ( (c >= 'a' && c <=
13.578257649157624,10,'z') || (c >= 'A' && c <=
13.578257649157624,10,') || (c >= 'A' && c <=
13.578257649157624,10,'a' && c <= 'z') || (c >=
13.578257649157624,10,' && c <= 'z') || (c >=
13.852191015864442,10,if ( (c >= 'a' && c <= '
13.852191015864442,10,println(c + " is not an alphabet."
13.852191015864442,10,System.out.print("First " + n + " terms: "
13.852191015864442,10,n(c + " is not an alphabet."
13.852191015864442,10,out.println(c + " is an alphabet."
13.852191015864442,10,'a' && c <= 'z') || (c >
13.852191015864442,10,' && c <= 'z') || (c >
13.852191015864442,10,if ( (c >= 'a' && c <
13.852191015864442,10,'z') || (c >= 'A' && c <
13.852191015864442,10,') || (c >= 'A' && c <
13.852191015864442,10,if ( (c >= 'a' && c <= 'z'
13.852191015864442,10,System.out.println(c + " is an alphabet
13.852191015864442,10,out.println(c + " is not an alphabet
13.852191015864442,10,System.out.println(c + " is not an
13.852191015864442,10,System.out.println(c + " is an a
13.852191015864442,10,out.println(c + " is not an a
13.852191015864442,10,out.println(originalInteger + " is not a palindrome.
13.852191015864442,10,n(year + " is not a leap year.
13.852191015864442,10,n(num + " is not a prime number.
13.852191015864442,10,println(num + " is not a prime number.
13.852191015864442,10,println(year + " is not a leap year.
13.852191015864442,10,System.out.println(originalInteger + " is a palindrome.
13.852191015864442,10,System.out.println(c + " is an alphabet.
13.852191015864442,10,out.println(num + " is a prime number.
13.852191015864442,10,out.println(c + " is not an alphabet.
13.852191015864442,10,out.println(year + " is a leap year.
13.852191015864442,10,n(c + " is an alphabet.");
13.852191015864442,10,println(c + " is an alphabet.");
13.852191015864442,10,out.print("First " + n + " terms: ");
13.852191015864442,10,c + " is not an alphabet.");
13.852191015864442,10,c >= 'a' && c <= 'z') || (
13.852191015864442,10,n(num + " is a prime number.")
13.852191015864442,10,println(year + " is a leap year.")
13.852191015864442,10,println(c + " is not an alphabet.")
13.852191015864442,10,2; i <= num / 2; ++i)
13.852191015864442,10,println(num + " is a prime number.")
13.852191015864442,10,year + " is not a leap year.")
13.852191015864442,10,n(originalInteger + " is not a palindrome.")
13.852191015864442,10,out.println(c + " is an alphabet.")
13.852191015864442,10,num + " is not a prime number.")
13.852191015864442,10,out.println(originalInteger + " is a palindrome.")
13.852191015864442,10,n(year + " is a leap year.")
13.852191015864442,10,n(c + " is not an alphabet.")
13.852191015864442,10,println(originalInteger + " is not a palindrome.")
13.852191015864442,10,if ( year % 100 == 0) {
13.852191015864442,10,if ( year % 400 == 0) {
13.852191015864442,10,c >= 'A' && c <= 'Z')) {
13.852191015864442,10,c <= 'z') || (c >= 'A' &&
13.852191015864442,10,c >= 'a' && c <= 'z') ||
13.852191015864442,10,System.out.println(num + " is a prime 
13.852191015864442,10,out.println(num + " is not a prime 
13.852191015864442,10,out.println(year + " is not a leap 
13.852191015864442,10,System.out.println(num + " is not a 
13.852191015864442,10,' && c <= 'z') || (c >= 
13.852191015864442,10,if ( (c >= 'a' && c <= 
13.852191015864442,10,'z') || (c >= 'A' && c <= 
13.852191015864442,10,2; i <= num / 2; ++i) 
13.852191015864442,10,System.out.println(year + " is a leap 
13.852191015864442,10,c <= 'z') || (c >= 'A' && 
13.852191015864442,10,if ( (c >= 'a' && c 
13.852191015864442,10,System.out.println(originalInteger + " is not a 
13.852191015864442,10,c >= 'a' && c <= 'z') 
13.852191015864442,10,') || (c >= 'A' && c <= 
13.852191015864442,10,System.out.println(c + " is not an 
13.852191015864442,10,'a' && c <= 'z') || (c >= 
13.852191015864442,10,System.out.println(year + " is not a 
13.852191015864442,10,c >= 'a' && c <= 'z') || 
13.852191015864442,10,if ( (c >= 'a' && c <=
13.852191015864442,10,'z') || (c >= 'A' && c <=
13.852191015864442,10,') || (c >= 'A' && c <=
13.852191015864442,10,'a' && c <= 'z') || (c >=
13.852191015864442,10,' && c <= 'z') || (c >=
14.111309751953259,10,' && c <= 'z') || (c >= '
14.111309751953259,10,if ( (c >= 'a' && c <= '
14.111309751953259,10,'z') || (c >= 'A' && c <= '
14.111309751953259,10,'a' && c <= 'z') || (c >= '
14.111309751953259,10,') || (c >= 'A' && c <= '
14.111309751953259,10,System.out.println(c + " is an alphabet."
14.111309751953259,10,println(num + " is not a prime number."
14.111309751953259,10,println(year + " is not a leap year."
14.111309751953259,10,n(num + " is not a prime number."
14.111309751953259,10,System.out.println(originalInteger + " is a palindrome."
14.111309751953259,10,out.println(c + " is not an alphabet."
14.111309751953259,10,n(year + " is not a leap year."
14.111309751953259,10,out.println(year + " is a leap year."
14.111309751953259,10,out.println(originalInteger + " is not a palindrome."
14.111309751953259,10,out.println(num + " is a prime number."
14.111309751953259,10,System.out.println(year + " is not a leap
14.111309751953259,10,c <= 'z') || (c >= 'A' && c
14.111309751953259,10,c >= 'a' && c <= 'z') || (c
14.111309751953259,10,if ( (c >= 'a' && c <
14.111309751953259,10,if ( (c >= 'a' && c <= 'z'
14.111309751953259,10,' && c <= 'z') || (c >= 'A'
14.111309751953259,10,'a' && c <= 'z') || (c >= 'A'
14.111309751953259,10,'z') || (c >= 'A' && c <= 'Z'
14.111309751953259,10,') || (c >= 'A' && c <= 'Z'
14.111309751953259,10,System.out.println(c + " is not an alphabet
14.111309751953259,10,System.out.println(num + " is a prime num
14.111309751953259,10,out.println(num + " is not a prime num
14.111309751953259,10,System.out.println(num + " is a prime n
14.111309751953259,10,out.println(num + " is not a prime n
14.111309751953259,10,System.out.println(year + " is a leap year
14.111309751953259,10,out.println(year + " is not a leap year
14.111309751953259,10,System.out.println(c + " is not an a
14.111309751953259,10,System.out.println(originalInteger + " is not a palindrome
14.111309751953259,10,System.out.println(num + " is a prime number
14.111309751953259,10,out.println(num + " is not a prime number
14.111309751953259,10,System.out.println(num + " is not a prime
14.111309751953259,10,System.out.println(c + " is an alphabet.
14.111309751953259,10,out.println(c + " is not an alphabet.
14.111309751953259,10,n(num + " is a prime number.");
14.111309751953259,10,println(originalInteger + " is not a palindrome.");
14.111309751953259,10,n(year + " is a leap year.");
14.111309751953259,10,n(c + " is not an alphabet.");
14.111309751953259,10,println(c + " is not an alphabet.");
14.111309751953259,10,num + " is not a prime number.");
14.111309751953259,10,println(num + " is a prime number.");
14.111309751953259,10,println(year + " is a leap year.");
14.111309751953259,10,n(originalInteger + " is not a palindrome.");
14.111309751953259,10,year + " is not a leap year.");
14.111309751953259,10,out.println(originalInteger + " is a palindrome.");
14.111309751953259,10,out.println(c + " is an alphabet.");
14.111309751953259,10,c >= 'a' && c <= 'z') || (
14.111309751953259,10,println(c + " is not an alphabet.")
14.111309751953259,10,System.out.print("First " + n + " terms: ")
14.111309751953259,10,if ( (c >= 'a' && c <= 'z')
14.111309751953259,10,out.println(c + " is an alphabet.")
14.111309751953259,10,n(c + " is not an alphabet.")
14.111309751953259,10,2; i <= num / 2; ++i) {
14.111309751953259,10,c >= 'a' && c <= 'z') ||
14.111309751953259,10,' && c <= 'z') || (c >= 
14.111309751953259,10,if ( (c >= 'a' && c <= 
14.111309751953259,10,'z') || (c >= 'A' && c <= 
14.111309751953259,10,2; i <= num / 2; ++i) 
14.111309751953259,10,c <= 'z') || (c >= 'A' && 
14.111309751953259,10,') || (c >= 'A' && c <= 
14.111309751953259,10,System.out.println(c + " is not an 
14.111309751953259,10,'a' && c <= 'z') || (c >= 
14.111309751953259,10,c >= 'a' && c <= 'z') || 
14.111309751953259,10,if ( (c >= 'a' && c <=
14.357134362489344,10,' && c <= 'z') || (c >= '
14.357134362489344,10,if ( (c >= 'a' && c <= '
14.357134362489344,10,'z') || (c >= 'A' && c <= '
14.357134362489344,10,'a' && c <= 'z') || (c >= '
14.357134362489344,10,') || (c >= 'A' && c <= '
14.357134362489344,10,System.out.println(c + " is an alphabet."
14.357134362489344,10,out.println(c + " is not an alphabet."
14.357134362489344,10,c <= 'z') || (c >= 'A' && c
14.357134362489344,10,c >= 'a' && c <= 'z') || (c
14.357134362489344,10,if ( (c >= 'a' && c <= 'z'
14.357134362489344,10,' && c <= 'z') || (c >= 'A'
14.357134362489344,10,'a' && c <= 'z') || (c >= 'A'
14.357134362489344,10,'z') || (c >= 'A' && c <= 'Z'
14.357134362489344,10,') || (c >= 'A' && c <= 'Z'
14.357134362489344,10,System.out.println(c + " is not an alphabet
14.357134362489344,10,System.out.println(c + " is not an a
14.357134362489344,10,System.out.println(year + " is a leap year.
14.357134362489344,10,out.println(year + " is not a leap year.
14.357134362489344,10,System.out.println(c + " is not an alphabet.
14.357134362489344,10,System.out.println(originalInteger + " is not a palindrome.
14.357134362489344,10,System.out.println(num + " is a prime number.
14.357134362489344,10,out.println(num + " is not a prime number.
14.357134362489344,10,n(c + " is not an alphabet.");
14.357134362489344,10,println(c + " is not an alphabet.");
14.357134362489344,10,out.println(c + " is an alphabet.");
14.357134362489344,10,System.out.print("First " + n + " terms: ");
14.357134362489344,10,c >= 'a' && c <= 'z') || (
14.357134362489344,10,println(num + " is not a prime number.")
14.357134362489344,10,'z') || (c >= 'A' && c <= 'Z')
14.357134362489344,10,out.println(c + " is not an alphabet.")
14.357134362489344,10,out.println(originalInteger + " is not a palindrome.")
14.357134362489344,10,') || (c >= 'A' && c <= 'Z')
14.357134362489344,10,println(year + " is not a leap year.")
14.357134362489344,10,n(year + " is not a leap year.")
14.357134362489344,10,System.out.println(c + " is an alphabet.")
14.357134362489344,10,if ( (c >= 'a' && c <= 'z')
14.357134362489344,10,out.println(num + " is a prime number.")
14.357134362489344,10,System.out.println(originalInteger + " is a palindrome.")
14.357134362489344,10,out.println(year + " is a leap year.")
14.357134362489344,10,n(num + " is not a prime number.")
14.357134362489344,10,2; i <= num / 2; ++i) {
14.357134362489344,10,if ( (c >= 'a' && c <= 'z') 
14.357134362489344,10,if ( (c >= 'a' && c <= 
14.357134362489344,10,System.out.println(num + " is not a prime 
14.357134362489344,10,c <= 'z') || (c >= 'A' && c 
14.357134362489344,10,System.out.println(year + " is not a leap 
14.357134362489344,10,c >= 'a' && c <= 'z') || (c 
14.357134362489344,10,c >= 'a' && c <= 'z') || 
14.357134362489344,10,'a' && c <= 'z') || (c >= 'A' 
14.357134362489344,10,' && c <= 'z') || (c >= 'A' 
14.590962648392017,10,if ( (c >= 'a' && c <= '
14.590962648392017,10,System.out.println(year + " is a leap year."
14.590962648392017,10,System.out.println(originalInteger + " is not a palindrome."
14.590962648392017,10,out.println(year + " is not a leap year."
14.590962648392017,10,System.out.println(num + " is a prime number."
14.590962648392017,10,out.println(num + " is not a prime number."
14.590962648392017,10,System.out.println(c + " is not an alphabet."
14.590962648392017,10,c >= 'a' && c <= 'z') || (c
14.590962648392017,10,c >= 'a' && c <= 'z') || (c >
14.590962648392017,10,c <= 'z') || (c >= 'A' && c <
14.590962648392017,10,if ( (c >= 'a' && c <= 'z'
14.590962648392017,10,System.out.println(num + " is not a prime num
14.590962648392017,10,System.out.println(num + " is not a prime n
14.590962648392017,10,System.out.println(year + " is not a leap year
14.590962648392017,10,System.out.println(num + " is not a prime number
14.590962648392017,10,System.out.println(c + " is not an alphabet.
14.590962648392017,10,n(num + " is not a prime number.");
14.590962648392017,10,println(num + " is not a prime number.");
14.590962648392017,10,System.out.println(originalInteger + " is a palindrome.");
14.590962648392017,10,out.println(c + " is not an alphabet.");
14.590962648392017,10,out.println(year + " is a leap year.");
14.590962648392017,10,out.println(num + " is a prime number.");
14.590962648392017,10,out.println(originalInteger + " is not a palindrome.");
14.590962648392017,10,println(year + " is not a leap year.");
14.590962648392017,10,System.out.println(c + " is an alphabet.");
14.590962648392017,10,n(year + " is not a leap year.");
14.590962648392017,10,c >= 'a' && c <= 'z') || (
14.590962648392017,10,'z') || (c >= 'A' && c <= 'Z')
14.590962648392017,10,') || (c >= 'A' && c <= 'Z'))
14.590962648392017,10,out.println(c + " is not an alphabet.")
14.590962648392017,10,') || (c >= 'A' && c <= 'Z')
14.590962648392017,10,System.out.println(c + " is an alphabet.")
14.590962648392017,10,'z') || (c >= 'A' && c <= 'Z'))
14.590962648392017,10,if ( (c >= 'a' && c <= 'z')
14.590962648392017,10,' && c <= 'z') || (c >= 'A' &&
14.590962648392017,10,'a' && c <= 'z') || (c >= 'A' &&
14.590962648392017,10,' && c <= 'z') || (c >= 'A' &
14.590962648392017,10,'a' && c <= 'z') || (c >= 'A' &
14.590962648392017,10,if ( (c >= 'a' && c <= 'z') ||
14.590962648392017,10,if ( (c >= 'a' && c <= 'z') 
14.590962648392017,10,c <= 'z') || (c >= 'A' && c 
14.590962648392017,10,c >= 'a' && c <= 'z') || (c 
14.590962648392017,10,'a' && c <= 'z') || (c >= 'A' 
14.590962648392017,10,' && c <= 'z') || (c >= 'A' 
14.590962648392017,10,c <= 'z') || (c >= 'A' && c <=
14.590962648392017,10,c >= 'a' && c <= 'z') || (c >=
14.813911181180263,10,System.out.println(c + " is not an alphabet."
14.813911181180263,10,c >= 'a' && c <= 'z') || (c
14.813911181180263,10,c >= 'a' && c <= 'z') || (c >
14.813911181180263,10,c <= 'z') || (c >= 'A' && c <
14.813911181180263,10,System.out.println(year + " is not a leap year.
14.813911181180263,10,System.out.println(num + " is not a prime number.
14.813911181180263,10,System.out.println(c + " is an alphabet.");
14.813911181180263,10,out.println(c + " is not an alphabet.");
14.813911181180263,10,'z') || (c >= 'A' && c <= 'Z'))
14.813911181180263,10,if ( (c >= 'a' && c <= 'z')
14.813911181180263,10,out.println(num + " is not a prime number.")
14.813911181180263,10,System.out.println(year + " is a leap year.")
14.813911181180263,10,') || (c >= 'A' && c <= 'Z'))
14.813911181180263,10,out.println(year + " is not a leap year.")
14.813911181180263,10,System.out.println(num + " is a prime number.")
14.813911181180263,10,System.out.println(c + " is not an alphabet.")
14.813911181180263,10,System.out.println(originalInteger + " is not a palindrome.")
14.813911181180263,10,' && c <= 'z') || (c >= 'A' &&
14.813911181180263,10,'a' && c <= 'z') || (c >= 'A' &&
14.813911181180263,10,' && c <= 'z') || (c >= 'A' &&
14.813911181180263,10,'a' && c <= 'z') || (c >= 'A' &&
14.813911181180263,10,' && c <= 'z') || (c >= 'A' &
14.813911181180263,10,'a' && c <= 'z') || (c >= 'A' &
14.813911181180263,10,if ( (c >= 'a' && c <= 'z') ||
14.813911181180263,10,if ( (c >= 'a' && c <= 'z') 
14.813911181180263,10,' && c <= 'z') || (c >= 'A' && 
14.813911181180263,10,'z') || (c >= 'A' && c <= 'Z')) 
14.813911181180263,10,c >= 'a' && c <= 'z') || (c >= 
14.813911181180263,10,c <= 'z') || (c >= 'A' && c <= 
14.813911181180263,10,'a' && c <= 'z') || (c >= 'A' && 
14.813911181180263,10,c >= 'a' && c <= 'z') || (c 
14.813911181180263,10,if ( (c >= 'a' && c <= 'z') || 
14.813911181180263,10,') || (c >= 'A' && c <= 'Z')) 
14.813911181180263,10,c <= 'z') || (c >= 'A' && c <=
14.813911181180263,10,c >= 'a' && c <= 'z') || (c >=
15.026947550789423,10,c >= 'a' && c <= 'z') || (c >= '
15.026947550789423,10,c <= 'z') || (c >= 'A' && c <= '
15.026947550789423,10,System.out.println(year + " is not a leap year."
15.026947550789423,10,System.out.println(num + " is not a prime number."
15.026947550789423,10,' && c <= 'z') || (c >= 'A' && c
15.026947550789423,10,'a' && c <= 'z') || (c >= 'A' && c
15.026947550789423,10,c >= 'a' && c <= 'z') || (c >
15.026947550789423,10,c >= 'a' && c <= 'z') || (c >= 'A'
15.026947550789423,10,c <= 'z') || (c >= 'A' && c <= 'Z'
15.026947550789423,10,out.println(year + " is not a leap year.");
15.026947550789423,10,System.out.println(year + " is a leap year.");
15.026947550789423,10,out.println(num + " is not a prime number.");
15.026947550789423,10,System.out.println(c + " is not an alphabet.");
15.026947550789423,10,System.out.println(originalInteger + " is not a palindrome.");
15.026947550789423,10,System.out.println(num + " is a prime number.");
15.026947550789423,10,if ( (c >= 'a' && c <= 'z') || (
15.026947550789423,10,System.out.println(c + " is not an alphabet.")
15.026947550789423,10,'z') || (c >= 'A' && c <= 'Z')) {
15.026947550789423,10,') || (c >= 'A' && c <= 'Z')) {
15.026947550789423,10,' && c <= 'z') || (c >= 'A' &&
15.026947550789423,10,'a' && c <= 'z') || (c >= 'A' &&
15.026947550789423,10,if ( (c >= 'a' && c <= 'z') ||
15.026947550789423,10,if ( (c >= 'a' && c <= 'z') 
15.026947550789423,10,' && c <= 'z') || (c >= 'A' && 
15.026947550789423,10,'z') || (c >= 'A' && c <= 'Z')) 
15.026947550789423,10,c >= 'a' && c <= 'z') || (c >= 
15.026947550789423,10,c <= 'z') || (c >= 'A' && c <= 
15.026947550789423,10,'a' && c <= 'z') || (c >= 'A' && 
15.026947550789423,10,c >= 'a' && c <= 'z') || (c 
15.026947550789423,10,if ( (c >= 'a' && c <= 'z') || 
15.026947550789423,10,') || (c >= 'A' && c <= 'Z')) 
15.026947550789423,10,c >= 'a' && c <= 'z') || (c >=
15.230915745150625,10,c >= 'a' && c <= 'z') || (c >= '
15.230915745150625,10,c <= 'z') || (c >= 'A' && c <= '
15.230915745150625,10,if ( (c >= 'a' && c <= 'z') || (c
15.230915745150625,10,' && c <= 'z') || (c >= 'A' && c
15.230915745150625,10,'a' && c <= 'z') || (c >= 'A' && c
15.230915745150625,10,c >= 'a' && c <= 'z') || (c >
15.230915745150625,10,c >= 'a' && c <= 'z') || (c >= 'A'
15.230915745150625,10,c <= 'z') || (c >= 'A' && c <= 'Z'
15.230915745150625,10,System.out.println(c + " is not an alphabet.");
15.230915745150625,10,if ( (c >= 'a' && c <= 'z') || (
15.230915745150625,10,System.out.println(year + " is not a leap year.")
15.230915745150625,10,System.out.println(num + " is not a prime number.")
15.230915745150625,10,c <= 'z') || (c >= 'A' && c <= 'Z')
15.230915745150625,10,'z') || (c >= 'A' && c <= 'Z')) {
15.230915745150625,10,') || (c >= 'A' && c <= 'Z')) {
15.230915745150625,10,if ( (c >= 'a' && c <= 'z') ||
15.230915745150625,10,' && c <= 'z') || (c >= 'A' && 
15.230915745150625,10,c >= 'a' && c <= 'z') || (c >= 
15.230915745150625,10,' && c <= 'z') || (c >= 'A' && c 
15.230915745150625,10,'a' && c <= 'z') || (c >= 'A' && c 
15.230915745150625,10,'a' && c <= 'z') || (c >= 'A' && 
15.230915745150625,10,c >= 'a' && c <= 'z') || (c >= 'A' 
15.230915745150625,10,if ( (c >= 'a' && c <= 'z') || 
15.230915745150625,10,c >= 'a' && c <= 'z') || (c >=
15.426556345429237,10,c >= 'a' && c <= 'z') || (c >= '
15.426556345429237,10,' && c <= 'z') || (c >= 'A' && c
15.426556345429237,10,'a' && c <= 'z') || (c >= 'A' && c
15.426556345429237,10,if ( (c >= 'a' && c <= 'z') || (c
15.426556345429237,10,' && c <= 'z') || (c >= 'A' && c <
15.426556345429237,10,'a' && c <= 'z') || (c >= 'A' && c <
15.426556345429237,10,c >= 'a' && c <= 'z') || (c >= 'A'
15.426556345429237,10,System.out.println(num + " is not a prime number.");
15.426556345429237,10,System.out.println(year + " is not a leap year.");
15.426556345429237,10,if ( (c >= 'a' && c <= 'z') || (
15.426556345429237,10,c <= 'z') || (c >= 'A' && c <= 'Z')
15.426556345429237,10,c <= 'z') || (c >= 'A' && c <= 'Z'))
15.426556345429237,10,c >= 'a' && c <= 'z') || (c >= 'A' &&
15.426556345429237,10,c >= 'a' && c <= 'z') || (c >= 'A' &
15.426556345429237,10,' && c <= 'z') || (c >= 'A' && c 
15.426556345429237,10,'a' && c <= 'z') || (c >= 'A' && c 
15.426556345429237,10,if ( (c >= 'a' && c <= 'z') || (c 
15.426556345429237,10,c >= 'a' && c <= 'z') || (c >= 'A' 
15.426556345429237,10,if ( (c >= 'a' && c <= 'z') || 
15.426556345429237,10,c >= 'a' && c <= 'z') || (c >= 
15.426556345429237,10,' && c <= 'z') || (c >= 'A' && c <=
15.426556345429237,10,'a' && c <= 'z') || (c >= 'A' && c <=
15.614522758017326,10,c >= 'a' && c <= 'z') || (c >= '
15.614522758017326,10,if ( (c >= 'a' && c <= 'z') || (c
15.614522758017326,10,if ( (c >= 'a' && c <= 'z') || (c >
15.614522758017326,10,' && c <= 'z') || (c >= 'A' && c <
15.614522758017326,10,'a' && c <= 'z') || (c >= 'A' && c <
15.614522758017326,10,c >= 'a' && c <= 'z') || (c >= 'A'
15.614522758017326,10,if ( (c >= 'a' && c <= 'z') || (
15.614522758017326,10,c <= 'z') || (c >= 'A' && c <= 'Z'))
15.614522758017326,10,c >= 'a' && c <= 'z') || (c >= 'A' &&
15.614522758017326,10,c >= 'a' && c <= 'z') || (c >= 'A' &
15.614522758017326,10,c >= 'a' && c <= 'z') || (c >= 'A' &&
15.614522758017326,10,' && c <= 'z') || (c >= 'A' && c 
15.614522758017326,10,'a' && c <= 'z') || (c >= 'A' && c 
15.614522758017326,10,c <= 'z') || (c >= 'A' && c <= 'Z')) 
15.614522758017326,10,c >= 'a' && c <= 'z') || (c >= 'A' && 
15.614522758017326,10,'a' && c <= 'z') || (c >= 'A' && c <= 
15.614522758017326,10,if ( (c >= 'a' && c <= 'z') || (c 
15.614522758017326,10,c >= 'a' && c <= 'z') || (c >= 'A' 
15.614522758017326,10,' && c <= 'z') || (c >= 'A' && c <= 
15.614522758017326,10,' && c <= 'z') || (c >= 'A' && c <=
15.614522758017326,10,'a' && c <= 'z') || (c >= 'A' && c <=
15.614522758017326,10,if ( (c >= 'a' && c <= 'z') || (c >=
15.795394381465618,10,'a' && c <= 'z') || (c >= 'A' && c <= '
15.795394381465618,10,' && c <= 'z') || (c >= 'A' && c <= '
15.795394381465618,10,c >= 'a' && c <= 'z') || (c >= 'A' && c
15.795394381465618,10,if ( (c >= 'a' && c <= 'z') || (c
15.795394381465618,10,if ( (c >= 'a' && c <= 'z') || (c >
15.795394381465618,10,' && c <= 'z') || (c >= 'A' && c <
15.795394381465618,10,'a' && c <= 'z') || (c >= 'A' && c <
15.795394381465618,10,'a' && c <= 'z') || (c >= 'A' && c <= 'Z'
15.795394381465618,10,' && c <= 'z') || (c >= 'A' && c <= 'Z'
15.795394381465618,10,c <= 'z') || (c >= 'A' && c <= 'Z')) {
15.795394381465618,10,c >= 'a' && c <= 'z') || (c >= 'A' &&
15.795394381465618,10,c >= 'a' && c <= 'z') || (c >= 'A' &
15.795394381465618,10,c >= 'a' && c <= 'z') || (c >= 'A' &&
15.795394381465618,10,c <= 'z') || (c >= 'A' && c <= 'Z')) 
15.795394381465618,10,if ( (c >= 'a' && c <= 'z') || (c >= 
15.795394381465618,10,c >= 'a' && c <= 'z') || (c >= 'A' && 
15.795394381465618,10,'a' && c <= 'z') || (c >= 'A' && c <= 
15.795394381465618,10,if ( (c >= 'a' && c <= 'z') || (c 
15.795394381465618,10,c >= 'a' && c <= 'z') || (c >= 'A' 
15.795394381465618,10,' && c <= 'z') || (c >= 'A' && c <= 
15.795394381465618,10,' && c <= 'z') || (c >= 'A' && c <=
15.795394381465618,10,'a' && c <= 'z') || (c >= 'A' && c <=
15.795394381465618,10,if ( (c >= 'a' && c <= 'z') || (c >=
15.969687377678198,10,if ( (c >= 'a' && c <= 'z') || (c >= '
15.969687377678198,10,'a' && c <= 'z') || (c >= 'A' && c <= '
15.969687377678198,10,' && c <= 'z') || (c >= 'A' && c <= '
15.969687377678198,10,c >= 'a' && c <= 'z') || (c >= 'A' && c
15.969687377678198,10,if ( (c >= 'a' && c <= 'z') || (c >
15.969687377678198,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A'
15.969687377678198,10,'a' && c <= 'z') || (c >= 'A' && c <= 'Z'
15.969687377678198,10,' && c <= 'z') || (c >= 'A' && c <= 'Z'
15.969687377678198,10,'a' && c <= 'z') || (c >= 'A' && c <= 'Z')
15.969687377678198,10,' && c <= 'z') || (c >= 'A' && c <= 'Z')
15.969687377678198,10,c <= 'z') || (c >= 'A' && c <= 'Z')) {
15.969687377678198,10,c >= 'a' && c <= 'z') || (c >= 'A' &&
15.969687377678198,10,c >= 'a' && c <= 'z') || (c >= 'A' &
15.969687377678198,10,c >= 'a' && c <= 'z') || (c >= 'A' &&
15.969687377678198,10,if ( (c >= 'a' && c <= 'z') || (c >= 
15.969687377678198,10,c >= 'a' && c <= 'z') || (c >= 'A' && 
15.969687377678198,10,'a' && c <= 'z') || (c >= 'A' && c <= 
15.969687377678198,10,if ( (c >= 'a' && c <= 'z') || (c 
15.969687377678198,10,c >= 'a' && c <= 'z') || (c >= 'A' && c 
15.969687377678198,10,' && c <= 'z') || (c >= 'A' && c <= 
15.969687377678198,10,if ( (c >= 'a' && c <= 'z') || (c >=
16.13786355214315,10,if ( (c >= 'a' && c <= 'z') || (c >= '
16.13786355214315,10,'a' && c <= 'z') || (c >= 'A' && c <= '
16.13786355214315,10,' && c <= 'z') || (c >= 'A' && c <= '
16.13786355214315,10,c >= 'a' && c <= 'z') || (c >= 'A' && c
16.13786355214315,10,if ( (c >= 'a' && c <= 'z') || (c >
16.13786355214315,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <
16.13786355214315,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A'
16.13786355214315,10,'a' && c <= 'z') || (c >= 'A' && c <= 'Z'
16.13786355214315,10,' && c <= 'z') || (c >= 'A' && c <= 'Z'
16.13786355214315,10,'a' && c <= 'z') || (c >= 'A' && c <= 'Z')
16.13786355214315,10,' && c <= 'z') || (c >= 'A' && c <= 'Z')
16.13786355214315,10,' && c <= 'z') || (c >= 'A' && c <= 'Z'))
16.13786355214315,10,'a' && c <= 'z') || (c >= 'A' && c <= 'Z'))
16.13786355214315,10,c >= 'a' && c <= 'z') || (c >= 'A' &&
16.13786355214315,10,if ( (c >= 'a' && c <= 'z') || (c >= 
16.13786355214315,10,c >= 'a' && c <= 'z') || (c >= 'A' && 
16.13786355214315,10,c >= 'a' && c <= 'z') || (c >= 'A' && c 
16.13786355214315,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' 
16.13786355214315,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <=
16.13786355214315,10,if ( (c >= 'a' && c <= 'z') || (c >=
16.300337728090522,10,if ( (c >= 'a' && c <= 'z') || (c >= '
16.300337728090522,10,c >= 'a' && c <= 'z') || (c >= 'A' && c
16.300337728090522,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <
16.300337728090522,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A'
16.300337728090522,10,'a' && c <= 'z') || (c >= 'A' && c <= 'Z')
16.300337728090522,10,' && c <= 'z') || (c >= 'A' && c <= 'Z')
16.300337728090522,10,' && c <= 'z') || (c >= 'A' && c <= 'Z'))
16.300337728090522,10,'a' && c <= 'z') || (c >= 'A' && c <= 'Z'))
16.300337728090522,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' &&
16.300337728090522,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' &
16.300337728090522,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= 
16.300337728090522,10,'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) 
16.300337728090522,10,if ( (c >= 'a' && c <= 'z') || (c >= 
16.300337728090522,10,c >= 'a' && c <= 'z') || (c >= 'A' && 
16.300337728090522,10,c >= 'a' && c <= 'z') || (c >= 'A' && c 
16.300337728090522,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' 
16.300337728090522,10,' && c <= 'z') || (c >= 'A' && c <= 'Z')) 
16.300337728090522,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <=
16.45748391106147,10,if ( (c >= 'a' && c <= 'z') || (c >= '
16.45748391106147,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= '
16.45748391106147,10,c >= 'a' && c <= 'z') || (c >= 'A' && c
16.45748391106147,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <
16.45748391106147,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A'
16.45748391106147,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'
16.45748391106147,10,' && c <= 'z') || (c >= 'A' && c <= 'Z'))
16.45748391106147,10,'a' && c <= 'z') || (c >= 'A' && c <= 'Z'))
16.45748391106147,10,'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {
16.45748391106147,10,' && c <= 'z') || (c >= 'A' && c <= 'Z')) {
16.45748391106147,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' &&
16.45748391106147,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' &
16.45748391106147,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' &&
16.45748391106147,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= 
16.45748391106147,10,'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) 
16.45748391106147,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && 
16.45748391106147,10,c >= 'a' && c <= 'z') || (c >= 'A' && c 
16.45748391106147,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' 
16.45748391106147,10,' && c <= 'z') || (c >= 'A' && c <= 'Z')) 
16.45748391106147,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <=
16.609640474436812,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= '
16.609640474436812,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c
16.609640474436812,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <
16.609640474436812,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'
16.609640474436812,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')
16.609640474436812,10,'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {
16.609640474436812,10,' && c <= 'z') || (c >= 'A' && c <= 'Z')) {
16.609640474436812,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' &&
16.609640474436812,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' &
16.609640474436812,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' &&
16.609640474436812,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= 
16.609640474436812,10,'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) 
16.609640474436812,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && 
16.609640474436812,10,c >= 'a' && c <= 'z') || (c >= 'A' && c 
16.609640474436812,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' 
16.609640474436812,10,' && c <= 'z') || (c >= 'A' && c <= 'Z')) 
16.609640474436812,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <=
16.75711454678144,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= '
16.75711454678144,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c
16.75711454678144,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <
16.75711454678144,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'
16.75711454678144,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')
16.75711454678144,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'))
16.75711454678144,10,'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {
16.75711454678144,10,' && c <= 'z') || (c >= 'A' && c <= 'Z')) {
16.75711454678144,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' &&
16.75711454678144,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' &
16.75711454678144,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' &&
16.75711454678144,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= 
16.75711454678144,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && 
16.75711454678144,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c 
16.75711454678144,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <=
16.900185744044986,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= '
16.900185744044986,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c
16.900185744044986,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <
16.900185744044986,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'
16.900185744044986,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')
16.900185744044986,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'))
16.900185744044986,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' &&
16.900185744044986,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= 
16.900185744044986,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) 
16.900185744044986,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && 
16.900185744044986,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c 
16.900185744044986,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <=
17.039109360618095,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= '
17.039109360618095,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c
17.039109360618095,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <
17.039109360618095,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'
17.039109360618095,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')
17.039109360618095,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'))
17.039109360618095,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {
17.039109360618095,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) 
17.039109360618095,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && 
17.039109360618095,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c 
17.039109360618095,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 
17.039109360618095,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <=
17.174119110751803,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= '
17.174119110751803,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c
17.174119110751803,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <
17.174119110751803,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'
17.174119110751803,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')
17.174119110751803,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'))
17.174119110751803,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {
17.174119110751803,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) 
17.174119110751803,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c 
17.174119110751803,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 
17.174119110751803,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <=
17.305429494288337,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= '
17.305429494288337,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <
17.305429494288337,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'
17.305429494288337,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')
17.305429494288337,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'))
17.305429494288337,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {
17.305429494288337,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) 
17.305429494288337,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c 
17.305429494288337,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 
17.305429494288337,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <=
17.43323784684062,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= '
17.43323784684062,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <
17.43323784684062,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'
17.43323784684062,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')
17.43323784684062,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'))
17.43323784684062,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {
17.43323784684062,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) 
17.43323784684062,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 
17.43323784684062,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <=
17.557726123618504,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= '
17.557726123618504,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'
17.557726123618504,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')
17.557726123618504,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'))
17.557726123618504,10,c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {
17.557726123618504,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) 
17.557726123618504,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 
17.679062457376702,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= '
17.679062457376702,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'
17.679062457376702,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')
17.679062457376702,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'))
17.679062457376702,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {
17.679062457376702,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) 
17.79740252396092,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')
17.79740252396092,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'))
17.79740252396092,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {
17.79740252396092,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) 
17.91289074327938,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'))
17.91289074327938,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {
17.91289074327938,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) 
18.02566133894198,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {
18.02566133894198,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) 
18.135839276067625,10,if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {
